{"version":3,"sources":["../../../src/components/elements/button/iconbutton.jsx"],"names":["IconButton","props","children","iconColor","iconComponent","name","other","className","getClasses","IconComponent","Components","Icon","classes","icon","PureComponent","defaultProps","Button"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;;IAGqBA,U;;;;;;;;;;;;AA6BjB;;iCAES;AAAA,yBAC0D,KAAKC,KAD/D;AAAA,gBACGC,QADH,UACGA,QADH;AAAA,gBACaC,SADb,UACaA,SADb;AAAA,gBACwBC,aADxB,UACwBA,aADxB;AAAA,gBACuCC,IADvC,UACuCA,IADvC;AAAA,gBACgDC,KADhD;;AAELA,kBAAMC,SAAN,GAAkB,0BAAWD,MAAMC,SAAjB,EAA4B,KAAKC,UAAL,EAA5B,CAAlB;AACA,gBAAMC,gBAAgBL,iBAAiBJ,WAAWU,UAAX,CAAsBC,IAA7D;;AAEA,mBACI;AAAC,0BAAD,CAAY,UAAZ,CAAuB,MAAvB;AACQL,qBADR;AAGI,8CAAC,aAAD,IAAe,OAAOH,SAAtB;AACe,0BAAME,IADrB,GAHJ;AAKKH;AALL,aADJ;AASH;;AArBD;;;;qCAuBa;AACT,gBAAIU,UAAU;AACVC,sBAAM;AADI,aAAd;AAGA,mBAAOD,OAAP;AACH;;;;EApDmC,gBAAME,a,UAoBnCC,Y,gBACA,iBAAOA,Y,UAIPL,U,GAAa;AAChBM,4BADgB;AAEhBL;AAFgB,C;kBAzBHX,U","file":"iconbutton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport elementType from 'react-prop-types/lib/elementType';\nimport Button from './button';\nimport Icon from '../icon/icon';\n\n/**\n * Icon button es un button con icon, en serio\n */\nexport default class IconButton extends React.PureComponent {\n    static propTypes = {\n        ...Button.propTypes,\n\n        /**\n         * Adds a SemanticUI color class to the icon.\n         */\n        iconColor: PropTypes.string,\n\n        /**\n         * Icon component\n         */\n        iconComponent: elementType,\n\n        /**\n         * Adds a SemanticUI name class to the icon.\n         */\n        name: PropTypes.string.isRequired\n    };\n\n    static defaultProps = {\n        ...Button.defaultProps\n    };\n\n    /* eslint-disable */\n    static Components = {\n        Button: Button,\n        Icon: Icon\n    };\n    /* eslint-enable */\n\n    render() {\n        const { children, iconColor, iconComponent, name, ...other } = this.props;\n        other.className = classNames(other.className, this.getClasses());\n        const IconComponent = iconComponent || IconButton.Components.Icon;\n\n        return (\n            <IconButton.Components.Button\n                {...other}\n            >\n                <IconComponent color={iconColor}\n                               name={name}/>\n                {children}\n            </IconButton.Components.Button>\n        );\n    }\n\n    getClasses() {\n        let classes = {\n            icon: true\n        };\n        return classes;\n    }\n}\n"]}