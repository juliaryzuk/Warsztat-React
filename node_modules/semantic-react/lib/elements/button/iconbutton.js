'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _elementType = require('react-prop-types/lib/elementType');

var _elementType2 = _interopRequireDefault(_elementType);

var _button = require('./button');

var _button2 = _interopRequireDefault(_button);

var _icon = require('../icon/icon');

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Icon button es un button con icon, en serio
 */
var IconButton = (_temp = _class = function (_React$PureComponent) {
    _inherits(IconButton, _React$PureComponent);

    function IconButton() {
        _classCallCheck(this, IconButton);

        return _possibleConstructorReturn(this, (IconButton.__proto__ || Object.getPrototypeOf(IconButton)).apply(this, arguments));
    }

    _createClass(IconButton, [{
        key: 'render',

        /* eslint-enable */

        value: function render() {
            var _props = this.props,
                children = _props.children,
                iconColor = _props.iconColor,
                iconComponent = _props.iconComponent,
                name = _props.name,
                other = _objectWithoutProperties(_props, ['children', 'iconColor', 'iconComponent', 'name']);

            other.className = (0, _classnames2.default)(other.className, this.getClasses());
            var IconComponent = iconComponent || IconButton.Components.Icon;

            return _react2.default.createElement(
                IconButton.Components.Button,
                other,
                _react2.default.createElement(IconComponent, { color: iconColor,
                    name: name }),
                children
            );
        }

        /* eslint-disable */

    }, {
        key: 'getClasses',
        value: function getClasses() {
            var classes = {
                icon: true
            };
            return classes;
        }
    }]);

    return IconButton;
}(_react2.default.PureComponent), _class.defaultProps = _extends({}, _button2.default.defaultProps), _class.Components = {
    Button: _button2.default,
    Icon: _icon2.default
}, _temp);
exports.default = IconButton;
//# sourceMappingURL=iconbutton.js.map