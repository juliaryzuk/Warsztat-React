{"version":3,"sources":["../../../src/components/elements/button/buttons.jsx"],"names":["validProps","attached","floated","Buttons","isAttached","props","basic","children","className","color","compact","component","defaultClasses","equal","inverted","size","vertical","other","getClasses","createElement","classes","ui","buttons","childCount","Children","count","PureComponent","childContextTypes","bool","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAIA,aAAa;AACbC,cAAU,CAAC,QAAD,EAAW,KAAX,CADG;AAEbC,aAAS,CAAC,OAAD,EAAU,MAAV;AACT;AAHa,CAAjB;;AAMA;;;IAGqBC,O;;;;;;;;;;;0CAyDC;AACd,mBAAO;AACHC,4BAAY,CAAC,CAAC,KAAKC,KAAL,CAAWJ;AADtB,aAAP;AAGH;;;iCAEQ;AACL;AADK,yBAIwB,KAAKI,KAJ7B;AAAA,gBAECJ,QAFD,UAECA,QAFD;AAAA,gBAEWK,KAFX,UAEWA,KAFX;AAAA,gBAEkBC,QAFlB,UAEkBA,QAFlB;AAAA,gBAE4BC,SAF5B,UAE4BA,SAF5B;AAAA,gBAEuCC,KAFvC,UAEuCA,KAFvC;AAAA,gBAE8CC,OAF9C,UAE8CA,OAF9C;AAAA,gBAEuDC,SAFvD,UAEuDA,SAFvD;AAAA,gBAGCC,cAHD,UAGCA,cAHD;AAAA,gBAGiBC,KAHjB,UAGiBA,KAHjB;AAAA,gBAGwBX,OAHxB,UAGwBA,OAHxB;AAAA,gBAGiCY,QAHjC,UAGiCA,QAHjC;AAAA,gBAG2CC,IAH3C,UAG2CA,IAH3C;AAAA,gBAICC,QAJD,UAICA,QAJD;AAAA,gBAIcC,KAJd;AAKL;;AAEAA,kBAAMT,SAAN,GAAkB,0BAAW,KAAKH,KAAL,CAAWG,SAAtB,EAAiC,KAAKU,UAAL,EAAjC,CAAlB;;AAEA,mBAAO,gBAAMC,aAAN,CACH,KAAKd,KAAL,CAAWM,SADR,EAEHM,KAFG,EAGH,KAAKZ,KAAL,CAAWE,QAHR,CAAP;AAKH;;;qCAEY;AACT,gBAAIa,UAAU;AACV;AACAC,oBAAI,KAAKhB,KAAL,CAAWO,cAFL;;AAIV;AACAN,uBAAO,KAAKD,KAAL,CAAWC,KALR;AAMVQ,0BAAU,KAAKT,KAAL,CAAWS,QANX;;AAQV;AACAb,0BAAU,KAAKI,KAAL,CAAWJ,QATX;AAUVS,yBAAS,KAAKL,KAAL,CAAWK,OAVV;AAWVM,0BAAU,KAAKX,KAAL,CAAWW,QAXX;;AAaV;AACAM,yBAAS,KAAKjB,KAAL,CAAWO;AAdV,aAAd;;AAiBA,gBAAIW,aAAa,gBAAMC,QAAN,CAAeC,KAAf,CAAqB,KAAKpB,KAAL,CAAWE,QAAhC,CAAjB;;AAEA;AACA,gBAAI,KAAKF,KAAL,CAAWQ,KAAf,EAAsB;AAClB,oBAAIU,aAAa,CAAb,IAAmBA,cAAc,EAArC,EAAyC;AACrCH,4BAAQ,mBAAQG,UAAR,CAAR,IAA+B,IAA/B;AACH,iBAFD,MAEO;AACHH,4BAAQ,OAAR,IAAmB,IAAnB;AACH;AACJ;;AAEDA,oBAAQ,KAAKf,KAAL,CAAWI,KAAnB,IAA4B,CAAC,CAAC,KAAKJ,KAAL,CAAWI,KAAzC;AACAW,oBAAQ,KAAKf,KAAL,CAAWU,IAAnB,IAA2B,CAAC,CAAC,KAAKV,KAAL,CAAWU,IAAxC;;AAEA,mBAAO,mCAAmBK,OAAnB,EAA4B,KAAKf,KAAjC,EAAwCL,UAAxC,CAAP;AACH;;;;EAhHgC,gBAAM0B,a,UAiDhCC,iB,GAAoB;AACvBvB,gBAAY,oBAAUwB;AADC,C,SAIpBC,Y,gBACA,uBAAaA,Y;kBAtDH1B,O","file":"buttons.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Numbers, validateClassProps } from '../../utilities';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\nlet validProps = {\n    attached: ['bottom', 'top'],\n    floated: ['right', 'left']\n    // No 'size' here to avoid validateClassProps() picking it up and adding classes\n};\n\n/**\n * Group of buttons\n */\nexport default class Buttons extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * It's attached to some other attachable component.\n         */\n        attached: PropTypes.oneOf(['bottom', 'top']),\n\n        /**\n         * Adds simple styling to the component.\n         */\n        basic: PropTypes.bool,\n\n        /**\n         * Adds a SemanticUI color class.\n         */\n        color: PropTypes.string,\n\n        /**\n         * Reduces the padding on the component.\n         */\n        compact: PropTypes.bool,\n\n        /**\n         * Forces all children to an equal width.\n         */\n        equal: PropTypes.bool,\n\n        /**\n         * Forces to component to float left or right.\n         */\n        floated: PropTypes.oneOf(['left', 'right']),\n\n        /**\n         * Styles the component for a dark background.\n         */\n        inverted: PropTypes.bool,\n\n        /**\n         * Adds a SemanticUI size class.\n         */\n        size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\n\n        /**\n         * Forces child components to render vertically.\n         */\n        vertical: PropTypes.bool\n    };\n\n    static childContextTypes = {\n        isAttached: PropTypes.bool\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps\n    };\n\n    getChildContext() {\n        return {\n            isAttached: !!this.props.attached\n        };\n    }\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        let { attached, basic, children, className, color, compact, component,\n              defaultClasses, equal, floated, inverted, size,\n              vertical, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        other.className = classNames(this.props.className, this.getClasses());\n\n        return React.createElement(\n            this.props.component,\n            other,\n            this.props.children\n        );\n    }\n\n    getClasses() {\n        let classes = {\n            // default\n            ui: this.props.defaultClasses,\n\n            // types\n            basic: this.props.basic,\n            inverted: this.props.inverted,\n\n            // variations\n            attached: this.props.attached,\n            compact: this.props.compact,\n            vertical: this.props.vertical,\n\n            // component\n            buttons: this.props.defaultClasses\n        };\n\n        let childCount = React.Children.count(this.props.children);\n\n        // buttons group with >0 buttons that are all of equal width\n        if (this.props.equal) {\n            if (childCount > 1  && childCount <= 12) {\n                classes[Numbers[childCount]] = true;\n            } else {\n                classes['fluid'] = true;\n            }\n        }\n\n        classes[this.props.color] = !!this.props.color;\n        classes[this.props.size] = !!this.props.size;\n\n        return validateClassProps(classes, this.props, validProps);\n    }\n}\n"]}