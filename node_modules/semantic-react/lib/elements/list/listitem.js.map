{"version":3,"sources":["../../../src/components/elements/list/listitem.jsx"],"names":["ListItem","props","image","imageType","imageComponent","ImageComponent","Components","Icon","Image","imageProps","name","avatar","src","rightFloatedComponent","RightFloatedComponent","children","contentAligned","List","component","defaultClasses","active","other","Component","context","isLinkList","className","getClasses","renderRightFloatedComponent","renderImageComponent","renderContent","link","item","PureComponent","contextTypes","bool","defaultProps","Content"],"mappings":"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","file":"listitem.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport elementType from 'react-prop-types/lib/elementType';\nimport classNames from 'classnames';\nimport Icon from '../icon/icon';\nimport Image from '../image/image';\nimport Content from '../simple/content';\nimport List from './list';\nimport DefaultProps from '../../defaultProps';\nimport { hasChild } from '../../utilities';\n\nexport default class ListItem extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Mark item as active. Valid only for link list\n         */\n        active: PropTypes.bool,\n        /**\n         * Content alignment\n         */\n        contentAligned: PropTypes.oneOf(['top', 'middle', 'bottom']),\n        /**\n         * Image/Icon name\n         */\n        image: PropTypes.string,\n        /**\n         * Type of image/icon\n         */\n        imageType: PropTypes.oneOf(['image', 'icon']),\n        /**\n         * Image/Icon component. Override to tune\n         */\n        imageComponent: elementType,\n        /**\n         * Right floated content component. If not provided, then right floated content will not be rendered\n         */\n        rightFloatedComponent: elementType\n    };\n\n    static contextTypes = {\n        isLinkList: PropTypes.bool\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        imageType: 'icon'\n    };\n\n    /* eslint-disable */\n    static Components = {\n        Content: Content,\n        Icon: Icon,\n        Image: Image,\n        List: List\n    };\n    /* eslint-enable */\n\n    renderImageComponent() {\n        const { image, imageType, imageComponent } = this.props;\n        if (!image) {\n            return null;\n        }\n        const ImageComponent = imageComponent ? imageComponent :\n            imageType === 'icon' ? ListItem.Components.Icon : ListItem.Components.Image;\n        // Looks like avatar image is most common used in list case\n        const imageProps = imageType === 'icon' ? { name: image } : { avatar: true, src: image };\n        return (\n            <ImageComponent {...imageProps}/>\n        );\n    }\n\n    renderRightFloatedComponent() {\n        const { rightFloatedComponent } = this.props;\n        if (!rightFloatedComponent) {\n            return null;\n        }\n        const RightFloatedComponent = rightFloatedComponent;\n        return (\n            <ListItem.Components.Content floated=\"right\">\n                <RightFloatedComponent/>\n            </ListItem.Components.Content>\n        );\n    }\n\n    renderContent() {\n        const { children, contentAligned } = this.props;\n        // Do not render content if has another sublist\n        if (hasChild(children, ListItem.Components.List)) {\n            return children;\n        } else {\n            return (\n                <ListItem.Components.Content aligned={contentAligned}>\n                    {children}\n                </ListItem.Components.Content>\n            );\n        }\n    }\n\n    render() {\n        const { component, children, defaultClasses, active, contentAligned, image, imageType, imageComponent, rightFloatedComponent, ...other } = this.props;\n        // List items should use <a>\n        const Component = this.context.isLinkList ? 'a' : component;\n\n        other.className = classNames(other.className, this.getClasses());\n        return (\n            <Component {...other}>\n                {this.renderRightFloatedComponent()}\n                {this.renderImageComponent()}\n                {this.renderContent()}\n            </Component>\n        );\n    }\n\n    getClasses() {\n        return {\n            active: this.props.active && this.context.isLinkList,\n            link: this.context.isLinkList,\n            item: this.props.defaultClasses\n        };\n    }\n}\n"]}