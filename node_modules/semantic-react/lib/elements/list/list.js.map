{"version":3,"sources":["../../../src/components/elements/list/list.jsx"],"names":["validProps","aligned","floated","List","isListChild","isLinkList","props","link","component","defaultClasses","animated","celled","horizontal","inverted","relaxed","selection","size","type","other","className","getClasses","Component","classes","ui","context","bulleted","ordered","divided","list","PureComponent","contextTypes","bool","childContextTypes","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAIA,aAAa;AACbC,aAAS,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,CADI;AAEbC,aAAS,CAAC,OAAD,EAAU,MAAV;AAFI,CAAjB;;IAKqBC,I;;;;;;;;;;;0CAmEC;AACd,mBAAO;AACHC,6BAAa,IADV;AAEHC,4BAAY,KAAKC,KAAL,CAAWC;AAFpB,aAAP;AAIH;;;iCAEQ;AACL;AADK,yBAIc,KAAKD,KAJnB;AAAA,gBAECE,SAFD,UAECA,SAFD;AAAA,gBAEYC,cAFZ,UAEYA,cAFZ;AAAA,gBAE4BR,OAF5B,UAE4BA,OAF5B;AAAA,gBAEqCS,QAFrC,UAEqCA,QAFrC;AAAA,gBAE+CC,MAF/C,UAE+CA,MAF/C;AAAA,gBAEuDT,OAFvD,UAEuDA,OAFvD;AAAA,gBAEgEU,UAFhE,UAEgEA,UAFhE;AAAA,gBAGCC,QAHD,UAGCA,QAHD;AAAA,gBAGWN,IAHX,UAGWA,IAHX;AAAA,gBAGiBO,OAHjB,UAGiBA,OAHjB;AAAA,gBAG0BC,SAH1B,UAG0BA,SAH1B;AAAA,gBAGqCC,IAHrC,UAGqCA,IAHrC;AAAA,gBAG2CC,IAH3C,UAG2CA,IAH3C;AAAA,gBAIIC,KAJJ;AAKL;;AAEAA,kBAAMC,SAAN,GAAkB,0BAAW,KAAKb,KAAL,CAAWa,SAAtB,EAAiC,KAAKC,UAAL,EAAjC,CAAlB;AACA,gBAAMC,YAAYb,SAAlB;AACA,mBACI,8BAAC,SAAD,EAAeU,KAAf,CADJ;AAGH;;;qCAEY;AACT,gBAAII,UAAU;AACV;AACAC,oBAAI,KAAKjB,KAAL,CAAWG,cAAX,IAA6B,CAAC,KAAKe,OAAL,CAAapB,WAFrC;;AAIV;AACAqB,0BAAU,KAAKnB,KAAL,CAAWW,IAAX,KAAoB,UALpB;AAMVL,4BAAY,KAAKN,KAAL,CAAWM,UANb;AAOVL,sBAAM,KAAKD,KAAL,CAAWC,IAPP;AAQVmB,yBAAS,KAAKpB,KAAL,CAAWW,IAAX,KAAoB,SARnB;;AAUV;AACAP,0BAAU,KAAKJ,KAAL,CAAWI,QAXX;AAYVC,wBAAQ,KAAKL,KAAL,CAAWK,MAAX,IAAqB,KAAKL,KAAL,CAAWK,MAAX,KAAsB,SAZzC;AAaVgB,yBAAS,KAAKrB,KAAL,CAAWK,MAAX,KAAsB,SAbrB;AAcVE,0BAAU,KAAKP,KAAL,CAAWO,QAdX;AAeVC,yBAAS,KAAKR,KAAL,CAAWQ,OAfV;AAgBVC,2BAAW,KAAKT,KAAL,CAAWS,SAhBZ;AAiBVd,yBAAS,KAAKK,KAAL,CAAWL,OAjBV;;AAmBV;AACA2B,sBAAM,KAAKtB,KAAL,CAAWG;AApBP,aAAd;;AAuBAa,oBAAQ,KAAKhB,KAAL,CAAWU,IAAnB,IAA2B,CAAC,CAAC,KAAKV,KAAL,CAAWU,IAAxC;;AAEA,mBAAO,mCAAmBM,OAAnB,EAA4B,KAAKhB,KAAjC,EAAwCN,UAAxC,CAAP;AACH;;;;EAnH6B,gBAAM6B,a,UAsD7BC,Y,GAAe;AAClB1B,iBAAa,oBAAU2B;AADL,C,SAIfC,iB,GAAoB;AACvB5B,iBAAa,oBAAU2B,IADA;AAEvB1B,gBAAY,oBAAU0B;AAFC,C,SAKpBE,Y,gBACA,uBAAaA,Y;kBAhEH9B,I","file":"list.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { validateClassProps } from '../../utilities';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\nlet validProps = {\n    aligned: ['top', 'middle', 'bottom'],\n    floated: ['right', 'left']\n};\n\nexport default class List extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Controls content alignment for all items in list\n         */\n        aligned: PropTypes.oneOf(['top', 'middle', 'bottom']),\n        /**\n         * A list can animate to set the current item apart from the list\n         */\n        animated: PropTypes.bool,\n        /**\n         * Cell type\n         */\n        celled: PropTypes.oneOfType([\n            PropTypes.oneOf(['divided']),\n            PropTypes.bool\n        ]),\n        /**\n         * Controls content floating for all items in list\n         */\n        floated: PropTypes.oneOf(['right', 'left']),\n        /**\n         * A list can be formatted to have items appear horizontally\n         */\n        horizontal: PropTypes.bool,\n        /**\n         * A list can be inverted to appear on a dark background\n         */\n        inverted: PropTypes.bool,\n        /**\n         * A list can be specially formatted for navigation links\n         */\n        link: PropTypes.bool,\n        /**\n         * A list can relax its padding to provide more negative space\n         */\n        relaxed: PropTypes.bool,\n        /**\n         * A selection list formats list items as possible choices\n         */\n        selection: PropTypes.bool,\n        /**\n         * A list can vary in size\n         */\n        size: PropTypes.string,\n        /**\n         * Type of the list\n         * Bulleted: mark items with a bullet\n         * Ordered: mark items with a number\n         */\n        type: PropTypes.oneOf(['bulleted', 'ordered'])\n    };\n\n    static contextTypes = {\n        isListChild: PropTypes.bool\n    };\n\n    static childContextTypes = {\n        isListChild: PropTypes.bool,\n        isLinkList: PropTypes.bool\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps\n    };\n\n    getChildContext() {\n        return {\n            isListChild: true,\n            isLinkList: this.props.link\n        }\n    }\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        let { component, defaultClasses, aligned, animated, celled, floated, horizontal,\n              inverted, link, relaxed, selection, size, type,\n              ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        other.className = classNames(this.props.className, this.getClasses());\n        const Component = component;\n        return (\n            <Component {...other}/>\n        );\n    }\n\n    getClasses() {\n        let classes = {\n            // default\n            ui: this.props.defaultClasses && !this.context.isListChild,\n\n            // types\n            bulleted: this.props.type === 'bulleted',\n            horizontal: this.props.horizontal,\n            link: this.props.link,\n            ordered: this.props.type === 'ordered',\n\n            // variations\n            animated: this.props.animated,\n            celled: this.props.celled && this.props.celled !== 'divided',\n            divided: this.props.celled === 'divided',\n            inverted: this.props.inverted,\n            relaxed: this.props.relaxed,\n            selection: this.props.selection,\n            aligned: this.props.aligned,\n\n            // component\n            list: this.props.defaultClasses\n        };\n\n        classes[this.props.size] = !!this.props.size;\n\n        return validateClassProps(classes, this.props, validProps);\n    }\n}\n"]}