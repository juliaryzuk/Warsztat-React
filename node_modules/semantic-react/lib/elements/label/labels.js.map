{"version":3,"sources":["../../../src/components/elements/label/labels.jsx"],"names":["Labels","props","component","children","defaultClasses","circular","color","tag","size","other","Component","className","getClasses","classes","ui","labels","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;;IAGqBA,M;;;;;;;;;;;iCAyBR;AAAA,yBAGD,KAAKC,KAHJ;AAAA,gBAEDC,SAFC,UAEDA,SAFC;AAAA,gBAEUC,QAFV,UAEUA,QAFV;AAAA,gBAEoBC,cAFpB,UAEoBA,cAFpB;AAAA,gBAEoCC,QAFpC,UAEoCA,QAFpC;AAAA,gBAE8CC,KAF9C,UAE8CA,KAF9C;AAAA,gBAEqDC,GAFrD,UAEqDA,GAFrD;AAAA,gBAE0DC,IAF1D,UAE0DA,IAF1D;AAAA,gBAEmEC,KAFnE;;AAKL,gBAAIC,YAAYR,SAAhB;AACAO,kBAAME,SAAN,GAAkB,0BAAWF,MAAME,SAAjB,EAA4B,KAAKC,UAAL,EAA5B,CAAlB;AACA,mBAAQ;AAAC,yBAAD;AAAeH,qBAAf;AAAuBN;AAAvB,aAAR;AACH;;;qCAEY;AACT,gBAAIU,UAAU;AACVC,oBAAI,KAAKb,KAAL,CAAWG,cADL;AAEVW,wBAAQ,KAAKd,KAAL,CAAWG,cAFT;AAGVC,0BAAU,KAAKJ,KAAL,CAAWI,QAHX;AAIVE,qBAAK,KAAKN,KAAL,CAAWM;AAJN,aAAd;;AAOAM,oBAAQ,KAAKZ,KAAL,CAAWK,KAAnB,IAA4B,CAAC,CAAC,KAAKL,KAAL,CAAWK,KAAzC;AACAO,oBAAQ,KAAKZ,KAAL,CAAWO,IAAnB,IAA2B,CAAC,CAAC,KAAKP,KAAL,CAAWO,IAAxC;AACA,mBAAOK,OAAP;AACH;;;;EA9C+B,gBAAMG,a,UAqB/BC,Y,gBACA,uBAAaA,Y;kBAtBHjB,M","file":"labels.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\n/**\n * Group of labels which can share same size, shape or color\n */\nexport default class Labels extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Labels can share shapes\n         */\n        circular: PropTypes.bool,\n        /**\n         * Labels can share colors together\n         */\n        color: PropTypes.string,\n        /**\n         * Labels can share tag formatting\n         */\n        tag: PropTypes.bool,\n        /**\n         * Labels can share sizes together\n         */\n        size: PropTypes.string\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps\n    };\n\n    render() {\n        const {\n            component, children, defaultClasses, circular, color, tag, size, ...other\n        } = this.props;\n\n        let Component = component;\n        other.className = classNames(other.className, this.getClasses());\n        return (<Component {...other}>{children}</Component>);\n    }\n\n    getClasses() {\n        let classes = {\n            ui: this.props.defaultClasses,\n            labels: this.props.defaultClasses,\n            circular: this.props.circular,\n            tag: this.props.tag\n        };\n\n        classes[this.props.color] = !!this.props.color;\n        classes[this.props.size] = !!this.props.size;\n        return classes;\n    }\n}\n\n"]}