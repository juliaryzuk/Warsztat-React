{"version":3,"sources":["../../../src/components/elements/label/label.jsx"],"names":["validProps","attached","corner","pointing","ribbon","Label","props","component","children","defaultClasses","basic","circular","color","empty","floating","horizontal","image","link","size","tag","other","Component","getComponent","className","getClasses","classes","ui","context","isCardsChild","isProgressChild","isStatisticChild","label","onClick","PureComponent","contextTypes","bool","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAIA,aAAa;AACbC,YAAU,CAAC,KAAD,EAAQ,QAAR,EAAkB,WAAlB,EAA+B,UAA/B,EAA2C,aAA3C,EAA0D,cAA1D,CADG;AAEbC,UAAQ,CAAC,MAAD,EAAS,OAAT,CAFK;AAGbC,YAAU,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,OAA1B,CAHG;AAIbC,UAAQ,CAAC,OAAD;AAJK,CAAjB;;AAOA;;;IAGqBC,K;;;;;;;;;;;6BAkFR;AAAA,mBAID,KAAKC,KAJJ;AAAA,UAEDC,SAFC,UAEDA,SAFC;AAAA,UAEUC,QAFV,UAEUA,QAFV;AAAA,UAEoBC,cAFpB,UAEoBA,cAFpB;AAAA,UAEoCR,QAFpC,UAEoCA,QAFpC;AAAA,UAE8CS,KAF9C,UAE8CA,KAF9C;AAAA,UAEqDC,QAFrD,UAEqDA,QAFrD;AAAA,UAE+DC,KAF/D,UAE+DA,KAF/D;AAAA,UAEsEV,MAFtE,UAEsEA,MAFtE;AAAA,UAE8EW,KAF9E,UAE8EA,KAF9E;AAAA,UAEqFC,QAFrF,UAEqFA,QAFrF;AAAA,UAGDC,UAHC,UAGDA,UAHC;AAAA,UAGWC,KAHX,UAGWA,KAHX;AAAA,UAGkBC,IAHlB,UAGkBA,IAHlB;AAAA,UAGwBd,QAHxB,UAGwBA,QAHxB;AAAA,UAGkCC,MAHlC,UAGkCA,MAHlC;AAAA,UAG0Cc,IAH1C,UAG0CA,IAH1C;AAAA,UAGgDC,GAHhD,UAGgDA,GAHhD;AAAA,UAGwDC,KAHxD;;AAKL,UAAIC,YAAY,KAAKC,YAAL,EAAhB;;AAEAF,YAAMG,SAAN,GAAkB,0BAAWH,MAAMG,SAAjB,EAA4B,KAAKC,UAAL,EAA5B,CAAlB;AACA,aACI;AAAC,iBAAD;AAAeJ,aAAf;AAEYJ,iBAAS,uCAAK,KAAKA,KAAV,GAFrB;AAGYR;AAHZ,OADJ;AAOH;;;iCAEY;AACT,UAAIiB,UAAU;AACV;AACAC,YAAI,KAAKpB,KAAL,CAAWG,cAAX,IAA6B,CAAC,KAAKkB,OAAL,CAAaC,YAA3C,IAA2D,CAAC,KAAKD,OAAL,CAAaE,eAAzE,IAA4F,CAAC,KAAKF,OAAL,CAAaG,gBAFpG;;AAIV;AACA7B,kBAAU,KAAKK,KAAL,CAAWL,QALX;AAMVC,gBAAQ,KAAKI,KAAL,CAAWJ,MANT;AAOVY,kBAAU,KAAKR,KAAL,CAAWQ,QAPX;AAQVE,eAAO,KAAKV,KAAL,CAAWU,KARR;AASVb,kBAAU,KAAKG,KAAL,CAAWH,QATX;AAUVC,gBAAQ,KAAKE,KAAL,CAAWF,MAVT;AAWVe,aAAK,KAAKb,KAAL,CAAWa,GAXN;AAYVT,eAAO,KAAKJ,KAAL,CAAWI,KAZR;AAaVK,oBAAY,KAAKT,KAAL,CAAWS,UAbb;;AAeV;AACAJ,kBAAU,KAAKL,KAAL,CAAWK,QAhBX;AAiBVE,eAAO,KAAKP,KAAL,CAAWO,KAjBR;;AAmBV;AACAkB,eAAO,KAAKzB,KAAL,CAAWG;AApBR,OAAd;;AAuBA;AACAgB,cAAQ,KAAKnB,KAAL,CAAWM,KAAnB,IAA4B,CAAC,CAAC,KAAKN,KAAL,CAAWM,KAAzC;AACAa,cAAQ,KAAKnB,KAAL,CAAWY,IAAnB,IAA2B,CAAC,CAAC,KAAKZ,KAAL,CAAWY,IAAxC;;AAEA,aAAO,mCAAmBO,OAAnB,EAA4B,KAAKnB,KAAjC,EAAwCN,UAAxC,CAAP;AACH;;;mCAEc;AACX,aAAQ,CAAC,KAAKM,KAAL,CAAWW,IAAX,IAAmB,KAAKX,KAAL,CAAW0B,OAA/B,KAA2C,KAAK1B,KAAL,CAAWC,SAAX,KAAyB,KAArE,GAA8E,GAA9E,GAAoF,KAAKD,KAAL,CAAWC,SAAtG;AACH;;;;EApI8B,gBAAM0B,a,UAwE9BC,Y,GAAe;AAClBN,gBAAc,oBAAUO,IADN;AAElBN,mBAAiB,oBAAUM,IAFT;AAGlBL,oBAAkB,oBAAUK;AAHV,C,SAMfC,Y,gBACA,uBAAaA,Y;kBA/EH/B,K","file":"label.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { validateClassProps } from '../../utilities';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\nlet validProps = {\n    attached: ['top', 'bottom', 'top right', 'top left', 'bottom left', 'bottom right'],\n    corner: ['left', 'right'],\n    pointing: ['top', 'bottom', 'left', 'right'],\n    ribbon: ['right']\n};\n\n/**\n * Label\n */\nexport default class Label extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * A label can attach to a content segment\n         */\n        attached: PropTypes.oneOf(['top', 'bottom', 'top right', 'top left', 'bottom left', 'bottom right']),\n        /**\n         * A label can reduce its complexity\n         */\n        basic: PropTypes.bool,\n        /**\n         * A label can be circular\n         */\n        circular: PropTypes.bool,\n        /**\n         * A label can have different colors\n         */\n        color: PropTypes.string,\n        /**\n         * A label can position itself in the corner of an element\n         */\n        corner: PropTypes.oneOfType([\n            PropTypes.oneOf(['left', 'right']),\n            PropTypes.bool\n        ]),\n        /**\n         * Empty label\n         */\n        empty: PropTypes.bool,\n        /**\n         * A label can float above another element\n         */\n        floating: PropTypes.bool,\n        /**\n         * A horizontal label is formatted to label content along-side it horizontally\n         */\n        horizontal: PropTypes.bool,\n\n        /**\n         * Add image to the label\n         */\n        image: PropTypes.string,\n        /**\n         * Format label as link (uses <a> tag)\n         */\n        link: PropTypes.bool,\n        /**\n         * A label can point to content next to it\n         */\n        pointing: PropTypes.oneOfType([\n            PropTypes.oneOf(['top', 'bottom', 'left', 'right']),\n            PropTypes.bool\n        ]),\n        /**\n         * A label can appear as a ribbon attaching itself to an element.\n         */\n        ribbon: PropTypes.oneOfType([\n            PropTypes.oneOf(['right']),\n            PropTypes.bool\n        ]),\n\n        /**\n         * A label can be small or large\n         */\n        size: PropTypes.string,\n        /**\n         * A label can appear as a tag\n         */\n        tag: PropTypes.bool\n    };\n\n    static contextTypes = {\n        isCardsChild: PropTypes.bool,\n        isProgressChild: PropTypes.bool,\n        isStatisticChild: PropTypes.bool\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps\n    };\n\n    render() {\n        const {\n            component, children, defaultClasses, attached, basic, circular, color, corner, empty, floating,\n            horizontal, image, link, pointing, ribbon, size, tag, ...other\n        } = this.props;\n        let Component = this.getComponent();\n\n        other.className = classNames(other.className, this.getClasses());\n        return (\n            <Component {...other}>\n                       {/* Add img tag if specified image */}\n                       {image && <img src={image}/>}\n                       {children}\n            </Component>\n        );\n    }\n\n    getClasses() {\n        let classes = {\n            // default\n            ui: this.props.defaultClasses && !this.context.isCardsChild && !this.context.isProgressChild && !this.context.isStatisticChild,\n\n            // types\n            attached: this.props.attached,\n            corner: this.props.corner,\n            floating: this.props.floating,\n            image: this.props.image,\n            pointing: this.props.pointing,\n            ribbon: this.props.ribbon,\n            tag: this.props.tag,\n            basic: this.props.basic,\n            horizontal: this.props.horizontal,\n\n            // variations\n            circular: this.props.circular,\n            empty: this.props.empty,\n\n            // component\n            label: this.props.defaultClasses\n        };\n\n        // handle mixed string/bool this.props\n        classes[this.props.color] = !!this.props.color;\n        classes[this.props.size] = !!this.props.size;\n\n        return validateClassProps(classes, this.props, validProps);\n    }\n\n    getComponent() {\n        return ((this.props.link || this.props.onClick) && this.props.component === 'div') ? 'a' : this.props.component;\n    }\n\n}\n\n"]}