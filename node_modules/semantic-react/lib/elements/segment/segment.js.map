{"version":3,"sources":["../../../src/components/elements/segment/segment.jsx"],"names":["validProps","aligned","attached","floated","Segment","props","component","defaultClasses","children","basic","blurring","className","clearing","color","disabled","container","spacing","emphasis","inverted","loading","vertical","type","zIndex","other","getClasses","style","getStyle","Component","classes","ui","right","left","center","top","bottom","raised","stacked","piled","compact","padded","primary","secondary","tertiary","segment","PureComponent","defaultProps"],"mappings":"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","file":"segment.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { validateClassProps } from '../../utilities';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\nconst validProps = {\n    aligned: ['right', 'left', 'center'],\n    attached: ['bottom', 'top'],\n    floated: ['right', 'left']\n};\n\nexport default class Segment extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * A segment can have its text aligned to a side\n         */\n        aligned: PropTypes.oneOf(['right', 'left', 'center']),\n        /**\n         * A segment can be attached to other content on a page\n         */\n        attached: PropTypes.oneOfType([\n            PropTypes.oneOf(['bottom', 'top']),\n            PropTypes.bool\n        ]),\n        /**\n         * A basic segment has no special formatting\n         */\n        basic: PropTypes.bool,\n        /**\n         * Blurring segment when used with dimmer\n         */\n        blurring: PropTypes.bool,\n        /**\n         * A segment can clear floated content\n         */\n        clearing: PropTypes.bool,\n        /**\n         * A segment can be colored\n         */\n        color: PropTypes.string,\n        /**\n         * Container segment\n         */\n        container: PropTypes.bool,\n        /**\n         * A segment may show its content is disabled\n         */\n        disabled: PropTypes.bool,\n        /**\n         * A segment can be formatted to appear more or less noticeable\n         */\n        emphasis: PropTypes.oneOf(['primary', 'secondary', 'tertiary']),\n        /**\n         * A segment can appear to the left or right of other content\n         */\n        floated: PropTypes.oneOf(['right', 'left']),\n        /**\n         * A segment can have its colors inverted for contrast\n         */\n        inverted: PropTypes.bool,\n        /**\n         * A segment may show its content is being loaded\n         */\n        loading: PropTypes.bool,\n        /**\n         * Segment spacing\n         */\n        spacing: PropTypes.oneOf(['fitted', 'padded']),\n        /**\n         * Segment type\n         */\n        type: PropTypes.oneOf(['raised', 'stacked', 'piled']),\n        /**\n         * A vertical segment formats content to be aligned as part of a vertical group\n         */\n        vertical: PropTypes.bool,\n        /**\n         * Segment zIndex\n         */\n        zIndex: PropTypes.number\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        attached: false,\n        style: {}\n    };\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        let { component, defaultClasses, children, aligned, attached, basic, blurring,\n              className, clearing, color, disabled, container, spacing,\n              emphasis, floated,  inverted, loading, vertical, type,\n              zIndex, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        other.className = classNames(this.props.className, this.getClasses());\n        other.style = this.getStyle();\n\n        const Component = component;\n        return (\n            <Component {...other}>\n                {children}\n            </Component>\n        );\n    }\n\n    getClasses() {\n        let classes = {\n            // default\n            ui: this.props.defaultClasses,\n\n            // positioning\n            right: false,\n            left: false,\n            center: false,\n            top: false,\n            bottom: false,\n\n            // types\n            raised: this.props.type === 'raised',\n            stacked: this.props.type === 'stacked',\n            piled: this.props.type === 'piled',\n            vertical: this.props.vertical,\n\n            // states\n            disabled: this.props.disabled,\n            loading: this.props.loading,\n\n            // variations\n            aligned: this.props.aligned,\n            attached: this.props.attached,\n            basic: this.props.basic,\n            blurring: this.props.blurring,\n            clearing: this.props.clearing,\n            compact: this.props.spacing === 'fitted',\n            container: this.props.container,\n            floated: this.props.floated,\n            inverted: this.props.inverted,\n            padded: this.props.spacing === 'padded',\n            primary: this.props.emphasis === 'primary',\n            secondary: this.props.emphasis === 'secondary',\n            tertiary: this.props.emphasis === 'tertiary',\n\n            // component\n            segment: this.props.defaultClasses\n        };\n\n        classes[this.props.color] = !!this.props.color;\n\n        return validateClassProps(classes, this.props, validProps);\n    }\n\n    getStyle() {\n        let style = this.props.style;\n\n        if (this.props.type === 'piled' && !style.zIndex) {\n            style.zIndex = this.props.zIndex || 0;\n        }\n\n        return style;\n    }\n}\n"]}