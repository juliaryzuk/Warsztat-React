{"version":3,"sources":["../../../src/components/elements/icon/icon.jsx"],"names":["validProps","aligned","flipped","floated","rotated","Icon","props","component","defaultClasses","children","bordered","circular","color","corner","state","fitted","inverted","link","name","size","other","Component","className","getClasses","classes","disabled","onClick","loading","icon","pointing","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAIA,aAAa;AACbC,WAAS,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB,CADI;AAEbC,WAAS,CAAC,cAAD,EAAiB,YAAjB,CAFI;AAGbC,WAAS,CAAC,OAAD,EAAU,MAAV,CAHI;AAIbC,WAAS,CAAC,WAAD,EAAc,kBAAd;AAJI,CAAjB;;AAOA;;;IAGqBC,I;;;;;;;;;;;6BAoER;AAAA,mBAID,KAAKC,KAJJ;AAAA,UAEDC,SAFC,UAEDA,SAFC;AAAA,UAEUC,cAFV,UAEUA,cAFV;AAAA,UAE0BC,QAF1B,UAE0BA,QAF1B;AAAA,UAEoCR,OAFpC,UAEoCA,OAFpC;AAAA,UAE6CS,QAF7C,UAE6CA,QAF7C;AAAA,UAEuDC,QAFvD,UAEuDA,QAFvD;AAAA,UAEiEC,KAFjE,UAEiEA,KAFjE;AAAA,UAEwEC,MAFxE,UAEwEA,MAFxE;AAAA,UAEgFC,KAFhF,UAEgFA,KAFhF;AAAA,UAEuFC,MAFvF,UAEuFA,MAFvF;AAAA,UAE+FZ,OAF/F,UAE+FA,OAF/F;AAAA,UAEwGD,OAFxG,UAEwGA,OAFxG;AAAA,UAGDc,QAHC,UAGDA,QAHC;AAAA,UAGSC,IAHT,UAGSA,IAHT;AAAA,UAGeC,IAHf,UAGeA,IAHf;AAAA,UAGqBC,IAHrB,UAGqBA,IAHrB;AAAA,UAG2Bf,OAH3B,UAG2BA,OAH3B;AAAA,UAGuCgB,KAHvC;;AAKL,UAAIC,YAAYd,SAAhB;AACAa,YAAME,SAAN,GAAkB,0BAAWF,MAAME,SAAjB,EAA4B,KAAKC,UAAL,EAA5B,CAAlB;AACA,aAAQ;AAAC,iBAAD;AAAeH,aAAf;AAAuBX;AAAvB,OAAR;AACH;;;iCAEY;AACT,UAAIe,UAAU;AACV;AACA;AACAvB,iBAAS,KAAKK,KAAL,CAAWL,OAHV;AAIVS,kBAAU,KAAKJ,KAAL,CAAWI,QAJX;AAKVC,kBAAU,KAAKL,KAAL,CAAWK,QALX;AAMVE,gBAAQ,KAAKP,KAAL,CAAWO,MANT;AAOVY,kBAAU,KAAKnB,KAAL,CAAWQ,KAAX,KAAqB,UAPrB;AAQVC,gBAAQ,KAAKT,KAAL,CAAWS,MART;AASVZ,iBAAS,KAAKG,KAAL,CAAWH,OATV;AAUVc,cAAM,KAAKX,KAAL,CAAWW,IAAX,IAAmB,KAAKX,KAAL,CAAWoB,OAV1B;AAWVV,kBAAU,KAAKV,KAAL,CAAWU,QAXX;AAYVW,iBAAS,KAAKrB,KAAL,CAAWQ,KAAX,KAAqB,SAZpB;;AAcV;AACAc,cAAM,KAAKtB,KAAL,CAAWE;AAfP,OAAd;;AAkBA;;AAEA;AACAgB,cAAQ,KAAKlB,KAAL,CAAWa,IAAnB,IAA2B,CAAC,CAAC,KAAKb,KAAL,CAAWa,IAAxC;AACAK,cAAQ,KAAKlB,KAAL,CAAWM,KAAnB,IAA4B,CAAC,CAAC,KAAKN,KAAL,CAAWM,KAAzC;AACAY,cAAQ,KAAKlB,KAAL,CAAWY,IAAnB,IAA2B,CAAC,CAAC,KAAKZ,KAAL,CAAWY,IAAxC;AACAM,cAAQ,KAAKlB,KAAL,CAAWuB,QAAnB,IAA+B,CAAC,CAAC,KAAKvB,KAAL,CAAWuB,QAA5C;;AAEA,aAAO,mCAAmBL,OAAnB,EAA4B,KAAKlB,KAAjC,EAAwCN,UAAxC,CAAP;AACH;;;;EA1G6B,gBAAM8B,a,UA+D7BC,Y,gBACA,uBAAaA,Y;AAChBxB,aAAW;;kBAjEEF,I","file":"icon.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { validateClassProps } from '../../utilities';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\nlet validProps = {\n    aligned: ['top', 'middle', 'bottom'],\n    flipped: ['horizontally', 'vertically'],\n    floated: ['right', 'left'],\n    rotated: ['clockwise', 'counterclockwise']\n};\n\n/**\n * Icon\n */\nexport default class Icon extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Vertical alignment of icon. Useful when child of other elements:\n         * Item\n         */\n        aligned: PropTypes.oneOf(['top', 'middle', 'bottom']),\n        /**\n         * An icon can be formatted to appear bordered\n         */\n        bordered: PropTypes.bool,\n        /**\n         * An icon can be formatted to appear circular\n         */\n        circular: PropTypes.bool,\n        /**\n         * An icon can be formatted with different colors\n         */\n        color: PropTypes.string,\n        /**\n         * Render as corner icon if used in <Icons/>\n         */\n        corner: PropTypes.bool,\n        /**\n         * Icon could be disabled or used as simple loader\n         */\n        state: PropTypes.oneOf(['disabled', 'loading']),\n        /**\n         * An icon can be fitted, without any space to the left or right of it.\n         */\n        fitted: PropTypes.bool,\n        /**\n         * Floated icon: Useful when child of other elements:\n         * Item\n         */\n        floated: PropTypes.oneOf(['left', 'right']),\n        /**\n         * An icon can be flipped\n         */\n        flipped: PropTypes.oneOf(['horizontally', 'vertically']),\n        /**\n         * An icon can have its colors inverted for contrast\n         */\n        inverted: PropTypes.bool,\n        /**\n         * Could be formatted as link\n         */\n        link: PropTypes.bool,\n        /**\n         * Icon name\n         */\n        name: PropTypes.string,\n        /**\n         * Icon size\n         */\n        size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\n        /**\n         * An icon can be rotated\n         */\n        rotated: PropTypes.oneOf(['clockwise', 'counterclockwise'])\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        component: 'i'\n    };\n\n    render() {\n        const {\n            component, defaultClasses, children, aligned, bordered, circular, color, corner, state, fitted, floated, flipped,\n            inverted, link, name, size, rotated, ...other\n        } = this.props;\n        let Component = component;\n        other.className = classNames(other.className, this.getClasses());\n        return (<Component {...other}>{children}</Component>);\n    }\n\n    getClasses() {\n        let classes = {\n            // default\n            // variations\n            aligned: this.props.aligned,\n            bordered: this.props.bordered,\n            circular: this.props.circular,\n            corner: this.props.corner,\n            disabled: this.props.state === 'disabled',\n            fitted: this.props.fitted,\n            floated: this.props.floated,\n            link: this.props.link || this.props.onClick,\n            inverted: this.props.inverted,\n            loading: this.props.state === 'loading',\n\n            // component\n            icon: this.props.defaultClasses\n        };\n\n        // handle all string or mixed string/bool this.props\n\n        // classes[this.this.props.aligned] = !!this.this.props.aligned;\n        classes[this.props.size] = !!this.props.size;\n        classes[this.props.color] = !!this.props.color;\n        classes[this.props.name] = !!this.props.name;\n        classes[this.props.pointing] = !!this.props.pointing;\n\n        return validateClassProps(classes, this.props, validProps);\n    }\n}\n"]}