{"version":3,"sources":["../../../src/components/elements/divider/divider.jsx"],"names":["Divider","props","aligned","children","clearing","component","defaultClasses","header","hidden","inverted","spacing","other","Component","className","getClasses","ui","horizontal","vertical","fitted","section","divider","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;;IAGqBA,O;;;;;;;;;;;iCAiCR;AAAA,yBAE+C,KAAKC,KAFpD;AAAA,gBACGC,OADH,UACGA,OADH;AAAA,gBACYC,QADZ,UACYA,QADZ;AAAA,gBACsBC,QADtB,UACsBA,QADtB;AAAA,gBACgCC,SADhC,UACgCA,SADhC;AAAA,gBAC2CC,cAD3C,UAC2CA,cAD3C;AAAA,gBAEDC,MAFC,UAEDA,MAFC;AAAA,gBAEOC,MAFP,UAEOA,MAFP;AAAA,gBAEeC,QAFf,UAEeA,QAFf;AAAA,gBAEyBC,OAFzB,UAEyBA,OAFzB;AAAA,gBAEqCC,KAFrC;;AAIL,gBAAIC,YAAYP,SAAhB;AACAM,kBAAME,SAAN,GAAkB,0BAAWF,MAAME,SAAjB,EAA4B,KAAKC,UAAL,EAA5B,CAAlB;AACA,mBACI;AAAC,yBAAD;AAAeH,qBAAf;AAAuBR;AAAvB,aADJ;AAGH;;;qCAEY;AACT,mBAAO;AACH;AACAY,oBAAI,KAAKd,KAAL,CAAWK,cAFZ;;AAIH;AACAC,wBAAQ,KAAKN,KAAL,CAAWM,MALhB;AAMHS,4BAAY,KAAKf,KAAL,CAAWC,OAAX,KAAuB,YANhC;AAOHe,0BAAU,KAAKhB,KAAL,CAAWC,OAAX,KAAuB,UAP9B;;AASH;AACAE,0BAAU,KAAKH,KAAL,CAAWG,QAVlB;AAWHc,wBAAQ,KAAKjB,KAAL,CAAWS,OAAX,KAAuB,QAX5B;AAYHF,wBAAQ,KAAKP,KAAL,CAAWO,MAZhB;AAaHC,0BAAU,KAAKR,KAAL,CAAWQ,QAblB;AAcHU,yBAAS,KAAKlB,KAAL,CAAWS,OAAX,KAAuB,QAd7B;;AAgBH;AACAU,yBAAS,KAAKnB,KAAL,CAAWK;AAjBjB,aAAP;AAmBH;;;;EAhEgC,gBAAMe,a,UA6BhCC,Y,gBACA,uBAAaA,Y;kBA9BHtB,O","file":"divider.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\n/**\n * Divider\n */\nexport default class Divider extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Content segment vertically or horizontally\n         */\n        aligned: PropTypes.oneOf(['horizontal', 'vertical']),\n        /**\n         * A divider can clear the contents above it\n         */\n        clearing: PropTypes.bool,\n        /**\n         * Formats divider as header-like (taking less space and don't capitalize content)\n         */\n        header: PropTypes.bool,\n        /**\n         * A hidden divider divides content without creating a dividing line\n         */\n        hidden: PropTypes.bool,\n        /**\n         * A divider can have its colors inverted\n         */\n        inverted: PropTypes.bool,\n        /**\n         * Divider spacing\n         */\n        spacing: PropTypes.oneOf(['fitted', 'padded'])\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps\n    };\n\n    render() {\n        const { aligned, children, clearing, component, defaultClasses,\n            header, hidden, inverted, spacing, ...other } = this.props;\n\n        let Component = component;\n        other.className = classNames(other.className, this.getClasses());\n        return (\n            <Component {...other}>{children}</Component>\n        );\n    }\n\n    getClasses() {\n        return {\n            // default\n            ui: this.props.defaultClasses,\n\n            // types\n            header: this.props.header,\n            horizontal: this.props.aligned === 'horizontal',\n            vertical: this.props.aligned === 'vertical',\n\n            // variations\n            clearing: this.props.clearing,\n            fitted: this.props.spacing === 'fitted',\n            hidden: this.props.hidden,\n            inverted: this.props.inverted,\n            section: this.props.spacing === 'padded',\n\n            // component\n            divider: this.props.defaultClasses\n        };\n    }\n}\n"]}