{"version":3,"sources":["../../../src/components/modules/rating/icon.jsx"],"names":["RatingIcon","onClick","event","stopPropagation","props","index","onMouseEnter","onMouseLeave","getClasses","active","selected","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;IAGqBA,U;;;;;;;;;;;;;;8LAwCjBC,O,GAAU,UAACC,KAAD,EAAW;AACjBA,YAAMC,eAAN;AADiB,wBAEU,MAAKC,KAFf;AAAA,UAETH,OAFS,eAETA,OAFS;AAAA,UAEAI,KAFA,eAEAA,KAFA;;AAGjBJ,cAAQI,KAAR;AACH,K,QAMDC,Y,GAAe,UAACJ,KAAD,EAAW;AACtBA,YAAMC,eAAN;AADsB,yBAEU,MAAKC,KAFf;AAAA,UAEdE,YAFc,gBAEdA,YAFc;AAAA,UAEAD,KAFA,gBAEAA,KAFA;;AAGtBC,mBAAaD,KAAb;AACH,K,QAMDE,Y,GAAe,UAACL,KAAD,EAAW;AACtBA,YAAMC,eAAN;AADsB,yBAEU,MAAKC,KAFf;AAAA,UAEdG,YAFc,gBAEdA,YAFc;AAAA,UAEAF,KAFA,gBAEAA,KAFA;;AAGtBE,mBAAaF,KAAb;AACH,K;;;AA5BD;;;;;;AAUA;;;;;;AAUA;;;;;;;;6BAUS;AACL,aACI,gDAAM,WAAW,0BAAW,KAAKG,UAAL,EAAX,CAAjB;AACM,iBAAS,KAAKP,OADpB;AAEM,sBAAc,KAAKK,YAFzB;AAGM,sBAAc,KAAKC;AAHzB,QADJ;AAOH;;;iCAGY;AACT,aAAO;AACHE,gBAAQ,KAAKL,KAAL,CAAWK,MADhB;AAEHC,kBAAU,KAAKN,KAAL,CAAWM;AAFlB,OAAP;AAIH;;;;EAlFmC,gBAAMC,a,UA4BnCC,Y,GAAe;AAClBH,UAAQ,KADU;AAElBC,YAAU,KAFQ;AAGlBT,WAAS,mBAAM,CAAE,CAHC;AAIlBK,gBAAc,wBAAM,CAAE,CAJJ;AAKlBC,gBAAc,wBAAM,CAAE;AALJ,C;kBA5BLP,U","file":"icon.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../../elements/icon/icon';\n\n/**\n * Internal rating icon component\n */\nexport default class RatingIcon extends React.PureComponent {\n    static propTypes = {\n        /**\n         * Active rating icon\n         */\n        active: PropTypes.bool,\n        /**\n         * Selected (on hover) rating icon\n         */\n        selected: PropTypes.bool,\n        /**\n         * Icon index\n         */\n        index: PropTypes.number.isRequired,\n        /**\n         * On click callback\n         */\n        onClick: PropTypes.func,\n        /**\n         * Mouse enter callback\n         */\n        onMouseEnter: PropTypes.func,\n        /**\n         * Mouse leave callback\n         */\n        onMouseLeave: PropTypes.func\n    };\n\n    static defaultProps = {\n        active: false,\n        selected: false,\n        onClick: () => {},\n        onMouseEnter: () => {},\n        onMouseLeave: () => {}\n    };\n\n    /**\n     * Click callback\n     * @param {React.MouseEvent} event\n     */\n    onClick = (event) => {\n        event.stopPropagation();\n        const { onClick, index } = this.props;\n        onClick(index);\n    };\n\n    /**\n     * Mouse enter callback\n     * @param {React.MouseEvent} event\n     */\n    onMouseEnter = (event) => {\n        event.stopPropagation();\n        const { onMouseEnter, index } = this.props;\n        onMouseEnter(index);\n    };\n\n    /**\n     * Mouse leave callback\n     * @param {React.MouseEvent} event\n     */\n    onMouseLeave = (event) => {\n        event.stopPropagation();\n        const { onMouseLeave, index } = this.props;\n        onMouseLeave(index);\n    };\n\n    render() {\n        return (\n            <Icon className={classNames(this.getClasses())}\n                  onClick={this.onClick}\n                  onMouseEnter={this.onMouseEnter}\n                  onMouseLeave={this.onMouseLeave}\n            />\n        );\n    }\n\n\n    getClasses() {\n        return {\n            active: this.props.active,\n            selected: this.props.selected\n        };\n    }\n}\n"]}