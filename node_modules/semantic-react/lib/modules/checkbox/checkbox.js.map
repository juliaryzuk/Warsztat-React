{"version":3,"sources":["../../../src/components/modules/checkbox/checkbox.jsx"],"names":["Checkbox","onClick","event","props","disabled","readOnly","children","defaultClasses","className","labelClassName","type","component","checked","other","childElements","name","fitted","getClasses","createElement","renderChildren","ui","checkbox","radio","slider","toggle","indeterminate","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,Q;;;;;;;;;;;;;;8LA2CjBC,O,GAAU,UAACC,KAAD,EAAW;AACjB,gBAAI,MAAKC,KAAL,CAAWC,QAAX,IAAuB,MAAKD,KAAL,CAAWE,QAAtC,EAAgD;;AAEhD,kBAAKF,KAAL,CAAWF,OAAX,CAAmBC,KAAnB;AACH,S;;;;;yCAEgB;AACb;AADa,yBAGoC,KAAKC,KAHzC;AAAA,gBAEPG,QAFO,UAEPA,QAFO;AAAA,gBAEGC,cAFH,UAEGA,cAFH;AAAA,gBAEmBC,SAFnB,UAEmBA,SAFnB;AAAA,gBAE8BC,cAF9B,UAE8BA,cAF9B;AAAA,gBAE8CR,OAF9C,UAE8CA,OAF9C;AAAA,gBAEuDS,IAFvD,UAEuDA,IAFvD;AAAA,gBAGPC,SAHO,UAGPA,SAHO;AAAA,gBAGIN,QAHJ,UAGIA,QAHJ;AAAA,gBAGcO,OAHd,UAGcA,OAHd;AAAA,gBAG0BC,KAH1B;AAIb;;AAEA,gBAAIC,gBAAgB,CAChB;AACI,sBAAK,UADT;AAEI,qBAAI,OAFR;AAGI,2BAAU,QAHd;AAII,8BAJJ;AAKI,yBAASF,OALb,GADgB,EAOhB;AAAA;AAAA,kBAAO,KAAI,OAAX,EAAmB,WAAWH,cAA9B;AACKH;AADL,aAPgB,CAApB;;AAYA,mBAAOQ,aAAP;AACH;;;iCAEQ;AACL;AADK,0BAEmH,KAAKX,KAFxH;AAAA,gBAECQ,SAFD,WAECA,SAFD;AAAA,gBAEYJ,cAFZ,WAEYA,cAFZ;AAAA,gBAE4BE,cAF5B,WAE4BA,cAF5B;AAAA,gBAE4CG,OAF5C,WAE4CA,OAF5C;AAAA,gBAEqDR,QAFrD,WAEqDA,QAFrD;AAAA,gBAE+DC,QAF/D,WAE+DA,QAF/D;AAAA,gBAEyEK,IAFzE,WAEyEA,IAFzE;AAAA,gBAE+ET,OAF/E,WAE+EA,OAF/E;AAAA,gBAEwFc,IAFxF,WAEwFA,IAFxF;AAAA,gBAE8FC,MAF9F,WAE8FA,MAF9F;AAAA,gBAEyGH,KAFzG;AAGL;;AAEAA,kBAAML,SAAN,GAAkB,0BAAW,KAAKL,KAAL,CAAWK,SAAtB,EAAiC,KAAKS,UAAL,EAAjC,CAAlB;AACAJ,kBAAMZ,OAAN,GAAgB,KAAKA,OAArB;;AAEA,mBAAO,gBAAMiB,aAAN,CACH,KAAKf,KAAL,CAAWQ,SADR,EAEHE,KAFG,EAGH,KAAKM,cAAL,EAHG,CAAP;AAKH;;;qCAEY;AACT,mBAAO;AACH;AACAC,oBAAI,KAAKjB,KAAL,CAAWI,cAFZ;AAGHc,0BAAU,KAAKlB,KAAL,CAAWI,cAHlB;;AAKH;;AAEA;AACAe,uBAAO,KAAKnB,KAAL,CAAWO,IAAX,IAAmB,OARvB;AASHa,wBAAQ,KAAKpB,KAAL,CAAWO,IAAX,IAAmB,QATxB;AAUHc,wBAAQ,KAAKrB,KAAL,CAAWO,IAAX,IAAmB,QAVxB;;AAYF;AACDM,wBAAQ,KAAKb,KAAL,CAAWa,MAbhB;;AAeH;AACA,6BAAa,KAAKb,KAAL,CAAWE,QAhBrB;AAiBHO,yBAAS,KAAKT,KAAL,CAAWS,OAjBjB;AAkBHR,0BAAU,KAAKD,KAAL,CAAWC,QAlBlB;AAmBHqB,+BAAe,KAAKtB,KAAL,CAAWsB;AAnBvB,aAAP;AAqBH;;;;EA3GiC,gBAAMC,a,UAqCjCC,Y,gBACA,uBAAaA,Y;AAChBjB,UAAM,S;AACNT,aAAS,mBAAM,CAAG;;kBAxCLD,Q","file":"checkbox.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DefaultProps  from '../../defaultProps';\n\nexport default class Checkbox extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Apply additional class name to to the label\n         */\n        labelClassName: PropTypes.string,\n        /**\n         * State checked\n         */\n        checked: PropTypes.bool,\n        /**\n         * Does not allow user interaction\n         */\n        disabled: PropTypes.bool,\n        /**\n         * It does disabled, but does not allow user interaction\n         */\n        readOnly: PropTypes.bool,\n        /**\n         * Callback handler to click checkbox\n         */\n        onClick: PropTypes.func,\n        /**\n        * Attr name\n         */\n        name: PropTypes.string,\n        /**\n        * Checkbox - appearance\n         */\n        type: PropTypes.oneOf(['default', 'radio', 'toggle', 'slider']),\n        /**\n        * A fitted checkbox does not leave padding for a label\n         */\n        fitted: PropTypes.bool\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        type: 'default',\n        onClick: () => { }\n    };\n\n    onClick = (event) => {\n        if (this.props.disabled || this.props.readOnly) return;\n\n        this.props.onClick(event);\n    };\n\n    renderChildren() {\n        /* eslint-disable no-use-before-define */\n        let { children, defaultClasses, className, labelClassName, onClick, type,\n              component, readOnly, checked, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        let childElements = [\n            <input\n                type=\"checkbox\"\n                key=\"input\"\n                className=\"hidden\"\n                readOnly\n                checked={checked} />,\n            <label key=\"label\" className={labelClassName}>\n                {children}\n            </label>\n        ];\n\n        return childElements;\n    }\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        let { component, defaultClasses, labelClassName, checked, disabled, readOnly, type, onClick, name, fitted, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        other.className = classNames(this.props.className, this.getClasses());\n        other.onClick = this.onClick;\n\n        return React.createElement(\n            this.props.component,\n            other,\n            this.renderChildren()\n        );\n    }\n\n    getClasses() {\n        return {\n            // default\n            ui: this.props.defaultClasses,\n            checkbox: this.props.defaultClasses,\n\n            // positioning\n\n            // types\n            radio: this.props.type == 'radio',\n            slider: this.props.type == 'slider',\n            toggle: this.props.type == 'toggle',\n\n             // variations\n            fitted: this.props.fitted,\n\n            // state\n            'read-only': this.props.readOnly,\n            checked: this.props.checked,\n            disabled: this.props.disabled,\n            indeterminate: this.props.indeterminate\n        };\n    }\n}\n"]}