{"version":3,"sources":["../../../../src/components/modules/checkbox/examples/read-only.jsx"],"names":["MyCheckboxes","props","state","isCheckbox","isRadio","isSlider","isToggle","name","setState","onClickCheckbox","bind","Component"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEMA,Y;;;AACF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,gIACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,wBAAY,KADH;AAETC,qBAAS,KAFA;AAGTC,sBAAU,KAHD;AAITC,sBAAU;AAJD,SAAb;AAHe;AASlB;;;;wCAEeC,I,EAAM;AAClB,iBAAKC,QAAL,qBACKD,IADL,EACY,CAAC,KAAKL,KAAL,CAAWK,IAAX,CADb;AAGH;;;iCAEQ;AAAA,yBAC6C,KAAKL,KADlD;AAAA,gBACCC,UADD,UACCA,UADD;AAAA,gBACaC,OADb,UACaA,OADb;AAAA,gBACsBC,QADtB,UACsBA,QADtB;AAAA,gBACgCC,QADhC,UACgCA,QADhC;;;AAGL,mBACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI;AAAA;AAAA;AACI,0CADJ;AAEI,qCAASH,UAFb;AAGI,qCAAS,KAAKM,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,EAAgC,YAAhC;AAHb;AAAA;AAAA;AADJ,iBADJ;AAUI;AAAA;AAAA;AACI;AAAA;AAAA;AACI,0CADJ;AAEI,kCAAK,OAFT;AAGI,qCAASN,OAHb;AAII,qCAAS,KAAKK,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,EAAgC,SAAhC;AAJb;AAAA;AAAA;AADJ,iBAVJ;AAoBI;AAAA;AAAA;AACI;AAAA;AAAA;AACI,0CADJ;AAEI,kCAAK,QAFT;AAGI,qCAASL,QAHb;AAII,qCAAS,KAAKI,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,EAAgC,UAAhC;AAJb;AAAA;AAAA;AADJ,iBApBJ;AA8BI;AAAA;AAAA;AACI;AAAA;AAAA;AACI,0CADJ;AAEI,kCAAK,QAFT;AAGI,qCAASJ,QAHb;AAII,qCAAS,KAAKG,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,EAAgC,UAAhC;AAJb;AAAA;AAAA;AADJ;AA9BJ,aADJ;AA2CH;;;;EAhEsB,gBAAMC,S;;AAmEjC,8BAAC,YAAD","file":"read-only.js","sourcesContent":["import React from 'react';\nimport Checkbox from '../checkbox';\nimport Form from '../../../collections/form/fields';\nimport Field from './../../../collections/form/form';\n\nclass MyCheckboxes extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isCheckbox: false,\n            isRadio: false,\n            isSlider: false,\n            isToggle: false\n        }\n    }\n\n    onClickCheckbox(name) {\n        this.setState({\n            [name]: !this.state[name]\n        });\n    }\n\n    render() {\n        let { isCheckbox, isRadio, isSlider, isToggle } = this.state;\n\n        return (\n            <Form>\n                <Field>\n                    <Checkbox\n                        readOnly\n                        checked={isCheckbox}\n                        onClick={this.onClickCheckbox.bind(this, 'isCheckbox')}\n                    >\n                        Read-only, you can test\n                    </Checkbox>\n                </Field>\n                <Field>\n                    <Checkbox\n                        readOnly\n                        type=\"radio\"\n                        checked={isRadio}\n                        onClick={this.onClickCheckbox.bind(this, 'isRadio')}\n                    >\n                        Read-only, you can test\n                    </Checkbox>\n                </Field>\n                <Field>\n                    <Checkbox\n                        readOnly\n                        type=\"slider\"\n                        checked={isSlider}\n                        onClick={this.onClickCheckbox.bind(this, 'isSlider')}\n                    >\n                        Read-only, you can test\n                    </Checkbox>\n                </Field>\n                <Field>\n                    <Checkbox\n                        readOnly\n                        type=\"toggle\"\n                        checked={isToggle}\n                        onClick={this.onClickCheckbox.bind(this, 'isToggle')}\n                    >\n                        Read-only, you can test\n                    </Checkbox>\n                </Field>\n            </Form>\n        );\n    }\n}\n\n<MyCheckboxes />\n"]}