{"version":3,"sources":["../../../src/components/modules/modal/modal.jsx"],"names":["MIN_MODAL_TOP_POSITION","Modal","props","onPressEsc","event","keyCode","stopPropagation","onRequestClose","onOutsideClick","state","active","closing","modal","target","findDOMNode","onAnimationRest","setTimeout","setState","onPortalOpened","onModalOpened","setPlacement","modalElement","height","offsetHeight","scrolling","window","innerHeight","marginTop","Math","round","portalRef","handleResize","bind","isModalChild","nextProps","component","defaultClasses","enter","leave","enterDuration","leaveDuration","onEnter","onLeave","children","dimmed","style","zIndex","onModalClosed","onAnimationStyle","other","modalStyle","top","ref","document","portalStyle","position","left","width","overflow","renderModal","PureComponent","childContextTypes","bool","defaultProps","Components","Dimmer","ModalElement"],"mappings":"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","file":"modal.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport Portal from 'react-portal';\nimport throttle from 'lodash.throttle';\nimport EventListener from 'react-event-listener';\nimport { isNodeInRoot } from '../../utilities';\nimport Dimmer from '../dimmer/dimmer';\nimport ModalElement from './modalelement';\nimport SemanticCSSTransition from '../../animation/animation';\nimport AnimationProps from '../../animation/animationProps';\n\nconst MIN_MODAL_TOP_POSITION = 35;\n\n/**\n * Modal is modal\n */\nexport default class Modal extends React.PureComponent {\n    static propTypes = {\n        ...ModalElement.propTypes,\n        ...AnimationProps.propTypes,\n        /**\n         * Dimmer variations\n         */\n        dimmed: PropTypes.oneOf(['blurring', 'inverted', 'blurring inverted']),\n        /**\n         * Callback from outside modal click\n         */\n        onRequestClose: PropTypes.func,\n        /**\n         * Callback for modal opening\n         */\n        onModalOpened: PropTypes.func,\n        /**\n         * Callback for modal closing\n         */\n        onModalClosed: PropTypes.func,\n        /**\n         * Overlay zIndex\n         */\n        zIndex: PropTypes.number\n    };\n\n\n    static childContextTypes = {\n        isModalChild: PropTypes.bool\n    };\n\n    static defaultProps = {\n        ...ModalElement.defaultProps,\n        ...AnimationProps.defaultProps,\n        onRequestClose: () => {},\n        onModalOpened: () => {},\n        onModalClosed: () => {},\n\n        enter: 'scale in',\n        leave: 'scale out',\n        enterDuration: 500,\n        leaveDuration: 500,\n        zIndex: 1000\n    };\n\n    /* eslint-disable */\n    static Components = {\n        Dimmer: Dimmer,\n        ModalElement: ModalElement\n    };\n    /* eslint-enable */\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active: props.active,\n            closing: false,\n            marginTop: 0,\n            scrolling: false\n        };\n\n        this.modal = null;\n        this.portalRef = null;\n        this.handleResize = throttle(this.setPlacement.bind(this), 100);\n    }\n\n    getChildContext() {\n        return {\n            isModalChild: true\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.active !== this.state.active) {\n            if (nextProps.active) {\n                this.setState({\n                    active: true,\n                    closing: false\n                });\n            } else {\n                this.setState({\n                    active: false,\n                    closing: true\n                });\n            }\n        }\n    }\n\n    onPressEsc = (event) => {\n        if (event.keyCode !== 27) {\n            return;\n        }\n\n        event.stopPropagation();\n        this.props.onRequestClose(event);\n    };\n\n    onOutsideClick = (event) => {\n        if (!this.state.active || this.state.closing) {\n            return;\n        }\n        if (!this.modal) {\n            return;\n        }\n        if (isNodeInRoot(event.target, ReactDOM.findDOMNode(this.modal))) {\n            return;\n        }\n        event.stopPropagation();\n        this.props.onRequestClose(event);\n    };\n\n    /**\n     * Animation completed\n     */\n    onAnimationRest = () => {\n        if (!this.state.active && this.state.closing) {\n            setTimeout(() => this.setState({ closing: false }));\n        }\n    };\n    \n    onPortalOpened = () => {\n        const { onModalOpened } = this.props;\n        onModalOpened();\n        this.setPlacement();\n    }\n    \n    setPlacement = () => {\n        const modalElement = ReactDOM.findDOMNode(this.modal);\n        if (modalElement) {\n            // Help to folks who're using inline-to-style libraries for styling\n            setTimeout(() => {\n                const height = modalElement.offsetHeight;\n                const scrolling = height >= window.innerHeight;\n                const marginTop = -Math.round(height / 2);\n                this.setState({ marginTop: marginTop, scrolling: scrolling });\n            }, 0);\n        }\n    }\n\n    /**\n     * Render modal element\n     * @returns {*}\n     */\n    renderModal() {\n        const {\n            component, defaultClasses, enter, leave, enterDuration, leaveDuration, onEnter, onLeave, children, dimmed, onOutsideClick, style, zIndex,\n            onModalOpened, onModalClosed, onRequestClose, onAnimationStyle, ...other\n        } = this.props;\n        \n        const { scrolling, marginTop } = this.state;\n\n        const modalStyle = {\n            ...style\n            // position: 'fixed',\n        };\n        if (scrolling) {\n            modalStyle.top = 0\n        } else {\n            modalStyle.marginTop = `${marginTop}px`;\n        }\n\n        return (\n            <SemanticCSSTransition\n                enterDuration={enterDuration}\n                leaveDuration={leaveDuration}\n                enter={enter}\n                leave={leave}\n                onLeave={this.onAnimationRest}\n                runOnMount\n            >\n                {this.state.active &&\n                    <Modal.Components.ModalElement\n                        {...other}\n                        active={this.state.active || (!this.state.active && this.state.closing)}\n                        key=\"modal\"\n                        ref={ref => this.modal = ref}\n                        style={modalStyle}\n                        scrolling={scrolling}\n                    >\n                        <EventListener\n                            target=\"window\"\n                            onResize={this.handleResize}/>\n                        <EventListener\n                            target={document}\n                            onKeyDown={this.onPressEsc}\n                            onMouseDown={this.onOutsideClick}\n                            onTouchStart={this.onOutsideClick}/>\n                        {children}\n                    </Modal.Components.ModalElement>\n                }\n            </SemanticCSSTransition>\n        );\n    }\n\n    render() {\n        const { onModalOpened, onModalClosed, enterDuration, leaveDuration, zIndex } = this.props;\n        const { scrolling } = this.state;\n\n        // Apply layer to portal to prevent clicking outside\n        const portalStyle = {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: zIndex\n        };\n        if (scrolling) {\n            portalStyle.overflow = 'auto';\n        }\n\n        return (\n            <Portal\n                isOpened={this.state.active || (!this.state.active && this.state.closing)}\n                onOpen={this.onPortalOpened}\n                onClose={onModalClosed}\n            >\n                {/* We don't want to have another transition inside Dimmer, since dimmer leave transition will block modal leave transition */}\n                <div style={portalStyle} className=\"dimmer modals\">\n                    <Modal.Components.Dimmer\n                        active={this.state.active}\n                        page\n                        noWrapChildren\n                        style={{ zIndex: 0 }} // Should be ok\n                        enterDuration={enterDuration}\n                        leaveDuration={leaveDuration}/>\n                    {this.renderModal()}\n                </div>\n            </Portal>\n        );\n    }\n}\n"]}