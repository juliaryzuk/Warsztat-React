'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactPortal = require('react-portal');

var _reactPortal2 = _interopRequireDefault(_reactPortal);

var _lodash = require('lodash.throttle');

var _lodash2 = _interopRequireDefault(_lodash);

var _reactEventListener = require('react-event-listener');

var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

var _utilities = require('../../utilities');

var _dimmer = require('../dimmer/dimmer');

var _dimmer2 = _interopRequireDefault(_dimmer);

var _modalelement = require('./modalelement');

var _modalelement2 = _interopRequireDefault(_modalelement);

var _animation = require('../../animation/animation');

var _animation2 = _interopRequireDefault(_animation);

var _animationProps = require('../../animation/animationProps');

var _animationProps2 = _interopRequireDefault(_animationProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MIN_MODAL_TOP_POSITION = 35;

/**
 * Modal is modal
 */
var Modal = (_temp = _class = function (_React$PureComponent) {
    _inherits(Modal, _React$PureComponent);

    /* eslint-enable */

    function Modal(props) {
        _classCallCheck(this, Modal);

        var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));

        _this.onPressEsc = function (event) {
            if (event.keyCode !== 27) {
                return;
            }

            event.stopPropagation();
            _this.props.onRequestClose(event);
        };

        _this.onOutsideClick = function (event) {
            if (!_this.state.active || _this.state.closing) {
                return;
            }
            if (!_this.modal) {
                return;
            }
            if ((0, _utilities.isNodeInRoot)(event.target, _reactDom2.default.findDOMNode(_this.modal))) {
                return;
            }
            event.stopPropagation();
            _this.props.onRequestClose(event);
        };

        _this.onAnimationRest = function () {
            if (!_this.state.active && _this.state.closing) {
                setTimeout(function () {
                    return _this.setState({ closing: false });
                });
            }
        };

        _this.onPortalOpened = function () {
            var onModalOpened = _this.props.onModalOpened;

            onModalOpened();
            _this.setPlacement();
        };

        _this.setPlacement = function () {
            var modalElement = _reactDom2.default.findDOMNode(_this.modal);
            if (modalElement) {
                // Help to folks who're using inline-to-style libraries for styling
                setTimeout(function () {
                    var height = modalElement.offsetHeight;
                    var scrolling = height >= window.innerHeight;
                    var marginTop = -Math.round(height / 2);
                    _this.setState({ marginTop: marginTop, scrolling: scrolling });
                }, 0);
            }
        };

        _this.state = {
            active: props.active,
            closing: false,
            marginTop: 0,
            scrolling: false
        };

        _this.modal = null;
        _this.portalRef = null;
        _this.handleResize = (0, _lodash2.default)(_this.setPlacement.bind(_this), 100);
        return _this;
    }

    /* eslint-disable */


    _createClass(Modal, [{
        key: 'getChildContext',
        value: function getChildContext() {
            return {
                isModalChild: true
            };
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.active !== this.state.active) {
                if (nextProps.active) {
                    this.setState({
                        active: true,
                        closing: false
                    });
                } else {
                    this.setState({
                        active: false,
                        closing: true
                    });
                }
            }
        }

        /**
         * Animation completed
         */

    }, {
        key: 'renderModal',


        /**
         * Render modal element
         * @returns {*}
         */
        value: function renderModal() {
            var _this2 = this;

            var _props = this.props,
                component = _props.component,
                defaultClasses = _props.defaultClasses,
                enter = _props.enter,
                leave = _props.leave,
                enterDuration = _props.enterDuration,
                leaveDuration = _props.leaveDuration,
                onEnter = _props.onEnter,
                onLeave = _props.onLeave,
                children = _props.children,
                dimmed = _props.dimmed,
                onOutsideClick = _props.onOutsideClick,
                style = _props.style,
                zIndex = _props.zIndex,
                onModalOpened = _props.onModalOpened,
                onModalClosed = _props.onModalClosed,
                onRequestClose = _props.onRequestClose,
                onAnimationStyle = _props.onAnimationStyle,
                other = _objectWithoutProperties(_props, ['component', 'defaultClasses', 'enter', 'leave', 'enterDuration', 'leaveDuration', 'onEnter', 'onLeave', 'children', 'dimmed', 'onOutsideClick', 'style', 'zIndex', 'onModalOpened', 'onModalClosed', 'onRequestClose', 'onAnimationStyle']);

            var _state = this.state,
                scrolling = _state.scrolling,
                marginTop = _state.marginTop;


            var modalStyle = _extends({}, style);
            if (scrolling) {
                modalStyle.top = 0;
            } else {
                modalStyle.marginTop = marginTop + 'px';
            }

            return _react2.default.createElement(
                _animation2.default,
                {
                    enterDuration: enterDuration,
                    leaveDuration: leaveDuration,
                    enter: enter,
                    leave: leave,
                    onLeave: this.onAnimationRest,
                    runOnMount: true
                },
                this.state.active && _react2.default.createElement(
                    Modal.Components.ModalElement,
                    _extends({}, other, {
                        active: this.state.active || !this.state.active && this.state.closing,
                        key: 'modal',
                        ref: function ref(_ref) {
                            return _this2.modal = _ref;
                        },
                        style: modalStyle,
                        scrolling: scrolling
                    }),
                    _react2.default.createElement(_reactEventListener2.default, {
                        target: 'window',
                        onResize: this.handleResize }),
                    _react2.default.createElement(_reactEventListener2.default, {
                        target: document,
                        onKeyDown: this.onPressEsc,
                        onMouseDown: this.onOutsideClick,
                        onTouchStart: this.onOutsideClick }),
                    children
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _props2 = this.props,
                onModalOpened = _props2.onModalOpened,
                onModalClosed = _props2.onModalClosed,
                enterDuration = _props2.enterDuration,
                leaveDuration = _props2.leaveDuration,
                zIndex = _props2.zIndex;
            var scrolling = this.state.scrolling;

            // Apply layer to portal to prevent clicking outside

            var portalStyle = {
                position: 'fixed',
                top: 0,
                left: 0,
                width: '100%',
                height: '100%',
                zIndex: zIndex
            };
            if (scrolling) {
                portalStyle.overflow = 'auto';
            }

            return _react2.default.createElement(
                _reactPortal2.default,
                {
                    isOpened: this.state.active || !this.state.active && this.state.closing,
                    onOpen: this.onPortalOpened,
                    onClose: onModalClosed
                },
                _react2.default.createElement(
                    'div',
                    { style: portalStyle, className: 'dimmer modals' },
                    _react2.default.createElement(Modal.Components.Dimmer, {
                        active: this.state.active,
                        page: true,
                        noWrapChildren: true,
                        style: { zIndex: 0 } // Should be ok
                        , enterDuration: enterDuration,
                        leaveDuration: leaveDuration }),
                    this.renderModal()
                )
            );
        }
    }]);

    return Modal;
}(_react2.default.PureComponent), _class.childContextTypes = {
    isModalChild: _propTypes2.default.bool
}, _class.defaultProps = _extends({}, _modalelement2.default.defaultProps, _animationProps2.default.defaultProps, {
    onRequestClose: function onRequestClose() {},
    onModalOpened: function onModalOpened() {},
    onModalClosed: function onModalClosed() {},

    enter: 'scale in',
    leave: 'scale out',
    enterDuration: 500,
    leaveDuration: 500,
    zIndex: 1000
}), _class.Components = {
    Dimmer: _dimmer2.default,
    ModalElement: _modalelement2.default
}, _temp);
exports.default = Modal;
//# sourceMappingURL=modal.js.map