{"version":3,"sources":["../../../src/components/modules/modal/modalelement.jsx"],"names":["ModalElement","props","component","defaultClasses","children","active","basic","fullscreen","scrolling","size","closePortal","runOnMount","other","Component","className","getClasses","classes","ui","modal","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;;IAGqBA,Y;;;;;;;;;;;iCAkCR;AAAA,yBAC0H,KAAKC,KAD/H;AAAA,gBACGC,SADH,UACGA,SADH;AAAA,gBACcC,cADd,UACcA,cADd;AAAA,gBAC8BC,QAD9B,UAC8BA,QAD9B;AAAA,gBACwCC,MADxC,UACwCA,MADxC;AAAA,gBACgDC,KADhD,UACgDA,KADhD;AAAA,gBACuDC,UADvD,UACuDA,UADvD;AAAA,gBACmEC,SADnE,UACmEA,SADnE;AAAA,gBAC8EC,IAD9E,UAC8EA,IAD9E;AAAA,gBACoFC,WADpF,UACoFA,WADpF;AAAA,gBACiGC,UADjG,UACiGA,UADjG;AAAA,gBACgHC,KADhH;;AAEL,gBAAIC,YAAYX,SAAhB;AACAU,kBAAME,SAAN,GAAkB,0BAAWF,MAAME,SAAjB,EAA4B,KAAKC,UAAL,EAA5B,CAAlB;AACA,mBACI;AAAC,yBAAD;AAAeH,qBAAf;AACKR;AADL,aADJ;AAKH;;;qCAEY;AACT,gBAAIY,UAAU;AACVC,oBAAI,KAAKhB,KAAL,CAAWE,cADL;AAEVE,wBAAQ,KAAKJ,KAAL,CAAWI,MAFT;AAGVC,uBAAO,KAAKL,KAAL,CAAWK,KAHR;AAIVC,4BAAY,KAAKN,KAAL,CAAWM,UAJb;AAKVC,2BAAW,KAAKP,KAAL,CAAWO,SALZ;AAMVU,uBAAO,KAAKjB,KAAL,CAAWE;AANR,aAAd;AAQAa,oBAAQ,KAAKf,KAAL,CAAWQ,IAAnB,IAA2B,CAAC,CAAC,KAAKR,KAAL,CAAWQ,IAAxC;AACA,mBAAOO,OAAP;AACH;;;;EAxDqC,gBAAMG,a,UA6BrCC,Y,gBACA,uBAAaA,Y;AAChBf,YAAQ;;kBA/BKL,Y","file":"modalelement.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DefaultProps from './../../defaultProps';\n\n/**\n * Modal element\n */\nexport default class ModalElement extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Should be modal visible\n         */\n        active: PropTypes.bool,\n        /**\n         * A modal can reduce its complexity\n         */\n        basic: PropTypes.bool,\n        /**\n         * A modal can use the entire size of the screen\n         */\n        fullscreen: PropTypes.bool,\n        /**\n         * Scrolling content\n         */\n        scrolling: PropTypes.bool,\n        /**\n         * A modal can vary in size\n         */\n        size: PropTypes.string,\n        /**\n         * Internal\n         */\n        closePortal: PropTypes.func\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        active: true\n    };\n\n    render() {\n        const { component, defaultClasses, children, active, basic, fullscreen, scrolling, size, closePortal, runOnMount, ...other } = this.props;\n        let Component = component;\n        other.className = classNames(other.className, this.getClasses());\n        return (\n            <Component {...other}>\n                {children}\n            </Component>\n        );\n    }\n\n    getClasses() {\n        let classes = {\n            ui: this.props.defaultClasses,\n            active: this.props.active,\n            basic: this.props.basic,\n            fullscreen: this.props.fullscreen,\n            scrolling: this.props.scrolling,\n            modal: this.props.defaultClasses\n        };\n        classes[this.props.size] = !!this.props.size;\n        return classes;\n    }\n}\n"]}