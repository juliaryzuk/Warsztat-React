{"version":3,"sources":["../../../src/components/modules/search/search.jsx"],"names":["Search","props","onBlur","state","focus","setState","onChange","e","onFocus","onSearchClick","child","getClassesInput","placeholder","value","renderInputIcon","icon","resultProps","key","emptyHeader","emptyMessage","results","search","enter","leave","enterDuration","leaveDuration","children","className","component","defaultClasses","initialAnimation","enterAnimation","leaveAnimation","loading","onAnimationStyle","other","getClasses","Component","renderInput","renderResults","Boolean","ui","category","Array","isArray","PureComponent","defaultProps","noop","Components","Results","Icon"],"mappings":"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","file":"search.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from './../../elements/icon/icon';\nimport Results from './results';\nimport DefaultProps from '../../defaultProps';\nimport SemanticCSSTransition from '../../animation/animation';\nimport AnimationProps from '../../animation/animationProps';\n\n/*\n3 support results types:\n\n{\n    title: 'test',\n    description: 'testing'\n}\n\n{\n    animal: ['cat', 'dog']\n}\n\n['test', 'test']\n*/\nexport default class Search extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        ...AnimationProps.propTypes,\n        emptyHeader: PropTypes.string,\n        emptyMessage: PropTypes.string,\n        icon: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.bool\n        ]),\n        loading: PropTypes.bool,\n        onChange: PropTypes.func.isRequired,\n        onSearchClick: PropTypes.func,\n        placeholder: PropTypes.string,\n        results: PropTypes.oneOfType([\n            PropTypes.array,\n            PropTypes.object\n        ]),\n        value: PropTypes.string\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        ...AnimationProps.defaultProps,\n        enter: 'scale in',\n        leave: 'scale out',\n        enterDuration: 200,\n        leaveDuration: 200,\n        icon: 'search',\n        onSearchClick: function noop() {},\n        placeholder: 'Search...',\n        value: ''\n    };\n\n    /* eslint-disable */\n    static Components = {\n        Results: Results,\n        Icon: Icon\n    };\n    /* eslint-enable */\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            focus: false\n        };\n    }\n\n    onBlur = () => {\n        if (this.state.focus) {\n            this.setState({\n                focus: false\n            });\n        }\n    }\n\n    onChange = (e) => {\n        this.props.onChange(e);\n    }\n\n    onFocus = () => {\n        this.setState({\n            focus: true\n        });\n    }\n\n    onSearchClick = (e, child) => {\n        this.props.onSearchClick(e, child);\n    }\n\n    renderInput() {\n        return (\n            <div className={this.getClassesInput()}\n                 key=\"searchInput\"\n            >\n                <input className=\"prompt\"\n                    onBlur={this.onBlur}\n                    onChange={this.onChange}\n                    onFocus={this.onFocus}\n                    placeholder={this.props.placeholder}\n                    type=\"text\"\n                    value={this.props.value}/>\n                {this.renderInputIcon()}\n            </div>\n        );\n    }\n\n    renderInputIcon() {\n        if (!this.props.icon) return null;\n\n        return <Search.Components.Icon name={this.props.icon} />;\n    }\n\n\n    renderResults() {\n        const resultProps = {\n            key: 'searchResults',\n            emptyHeader: this.props.emptyHeader,\n            emptyMessage: this.props.emptyMessage,\n            onSearchClick: this.onSearchClick,\n            results: this.state.focus ? this.props.results : [],\n            search: this.props.value || ''\n        };\n\n        const { enter, leave, enterDuration, leaveDuration } = this.props;\n\n        return (\n            <SemanticCSSTransition\n                enter={enter}\n                leave={leave}\n                enterDuration={enterDuration}\n                leaveDuration={leaveDuration}\n            >\n                {this.state.focus && this.props.value !== '' &&\n                <Search.Components.Results {...resultProps} key=\"results\"/>\n                }\n            </SemanticCSSTransition>\n        );\n    }\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        let { children, className, component, defaultClasses, emptyHeader,\n              emptyMessage, initialAnimation, enterAnimation, icon, leaveAnimation, loading,\n              onChange, onSearchClick, placeholder, results, onAnimationStyle, value,\n              ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        other.className = classNames(this.props.className, this.getClasses());\n        const Component = component;\n        return (\n            <Component {...other}>\n                {this.renderInput()},\n                {this.renderResults()}\n            </Component>\n        )\n    }\n\n    getClassesInput() {\n        return classNames('ui input', {\n            icon: Boolean(this.props.icon)\n        });\n    }\n\n    getClasses() {\n        return {\n            ui: this.props.defaultClasses,\n            search: this.props.defaultClasses,\n            \n            loading: this.props.loading,\n            focus: this.state.focus,\n            \n            category: !Array.isArray(this.props.results)\n        };\n    }\n\n}\n"]}