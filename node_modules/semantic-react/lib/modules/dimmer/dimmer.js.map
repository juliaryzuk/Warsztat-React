{"version":3,"sources":["../../../src/components/modules/dimmer/dimmer.jsx"],"names":["Dimmer","isDimmerChild","props","active","page","document","body","classList","add","remove","children","noWrapChildren","Components","Loader","component","defaultClasses","enterDuration","leaveDuration","enter","leave","inverted","closePortal","other","Component","className","getClasses","renderChildren","ui","dimmer","PureComponent","childContextTypes","bool","defaultProps","Content"],"mappings":"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","file":"dimmer.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SemanticCSSTransition from '../../animation/animation';\nimport AnimationProps from '../../animation/animationProps';\nimport classNames from 'classnames';\nimport { hasChild } from '../../utilities';\nimport DefaultProps from '../../defaultProps';\nimport Content from './../../elements/simple/content';\nimport Loader from './../../elements/loader/loader';\n\n/**\n * Dimmer\n */\nexport default class Dimmer extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        ...AnimationProps.propTypes,\n        /**\n         * Hide/Display dimmer\n         */\n        active: PropTypes.bool,\n        /**\n         * Page dimmer. Doesn't require dimmable section\n         */\n        page: PropTypes.bool,\n        /**\n         * Inverted dimmer\n         */\n        inverted: PropTypes.bool,\n        /**\n         * Disables auto-wrapping child contents into <Content>\n         */\n        noWrapChildren: PropTypes.bool,\n        /**\n         * internal\n         */\n        closePortal: PropTypes.func\n    };\n\n    \n    // This forces <Content> to add a centered div below it.\n    static childContextTypes = {\n        isDimmerChild: PropTypes.bool\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        ...AnimationProps.defaultProps,\n        enterDuration: 500,\n        leaveDuration: 300,\n        enter: 'fade in',\n        leave: 'fade out',\n        active: false,\n        page: false,\n        inverted: false,\n        noWrapChildren: false\n    };\n\n    /* eslint-disable */\n    static Components = {\n        Content: Content,\n        Loader: Loader\n    };\n    /* eslint-enable */\n\n    getChildContext() {\n        return {\n            isDimmerChild: true\n        };\n    }\n    \n    componentDidMount() {\n        const { active, page } = this.props;\n        if (active && page) {\n            document.body.classList.add('dimmable', 'dimmed');\n        }\n    }\n    \n    componentDidUpdate() {\n        const { active, page } = this.props;\n        if (active && page) {\n            document.body.classList.add('dimmable', 'dimmed');\n        }\n    }\n    \n    componentWillUnmount() {\n        const { page } = this.props;\n        if (page) {\n            document.body.classList.remove('dimmable', 'dimmed');\n        }\n    }\n\n    /**\n     * Render dimmer children\n     */\n    renderChildren() {\n        const { children, noWrapChildren } = this.props;\n        if (noWrapChildren) {\n            return children;\n        } else {\n            return (hasChild(children, Dimmer.Components.Loader)) ? children : <Dimmer.Components.Content>{children}</Dimmer.Components.Content>;\n        }\n    }\n\n    render() {\n        // Note: Need to consume closePortal since dimmer could be called from portal-ed components (modal/popup)\n        /* eslint-disable no-use-before-define */\n        const {\n            active, children, component, defaultClasses, enterDuration, leaveDuration, enter, leave,\n            page, inverted, noWrapChildren, closePortal, ...other\n        } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        const Component = component;\n        other.className = classNames(other.className, this.getClasses());\n\n        return (\n            <SemanticCSSTransition\n                enter={enter}\n                leave={leave}\n                enterDuration={enterDuration}\n                leaveDuration={leaveDuration}\n                runOnMount\n            >\n                {active &&\n                    <Component {...other}\n                        key=\"dimmer\"\n                    >\n                        {this.renderChildren()}\n                    </Component>\n                }\n            </SemanticCSSTransition>\n        );\n    }\n    \n    getClasses() {\n        return {\n            ui: this.props.defaultClasses,\n            active: this.props.active,\n            page: this.props.page,\n            inverted: this.props.inverted,\n            dimmer: this.props.defaultClasses\n        };\n    }\n}\n"]}