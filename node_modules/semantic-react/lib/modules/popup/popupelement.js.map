{"version":3,"sources":["../../../src/components/modules/popup/popupelement.jsx"],"names":["POSITIONS","PopupElement","props","popupEl","className","defaultClasses","children","component","basic","fluid","flowing","inverted","size","wide","position","other","Component","getClasses","ref","classes","ui","popup","visible","split","forEach","pos","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEO,IAAMA,gCAAY,CACrB,UADqB,EACT,YADS,EACK,WADL,EACkB,cADlB,EACkC,cADlC,EACkD,eADlD,EACmE,aADnE,EACkF,aADlF,CAAlB;;AAIP;;;IAGqBC,Y;;;AAgDjB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,gIACTA,KADS;;AAEf,cAAKC,OAAL,GAAe,IAAf;AAFe;AAGlB;;;;iCAEQ;AAAA;;AACL;AADK,yBAEuH,KAAKD,KAF5H;AAAA,gBAEGE,SAFH,UAEGA,SAFH;AAAA,gBAEcC,cAFd,UAEcA,cAFd;AAAA,gBAE8BC,QAF9B,UAE8BA,QAF9B;AAAA,gBAEwCC,SAFxC,UAEwCA,SAFxC;AAAA,gBAEmDC,KAFnD,UAEmDA,KAFnD;AAAA,gBAE0DC,KAF1D,UAE0DA,KAF1D;AAAA,gBAEiEC,OAFjE,UAEiEA,OAFjE;AAAA,gBAE0EC,QAF1E,UAE0EA,QAF1E;AAAA,gBAEoFC,IAFpF,UAEoFA,IAFpF;AAAA,gBAE0FC,IAF1F,UAE0FA,IAF1F;AAAA,gBAEgGC,QAFhG,UAEgGA,QAFhG;AAAA,gBAE6GC,KAF7G;AAGL;AACA;;AAEA,gBAAMC,YAAYT,SAAlB;;AAEAQ,kBAAMX,SAAN,GAAkB,0BAAWA,SAAX,EAAsB,KAAKa,UAAL,EAAtB,CAAlB;;AAEA,mBACI;AAAC,yBAAD;AAAA,6BAAeF,KAAf;AACI,yBAAK;AAAA,+BAAO,OAAKZ,OAAL,GAAee,IAAtB;AAAA;AADT;AAGKZ;AAHL,aADJ;AAOH;;;qCAEY;AACT,gBAAIa,UAAU;AACVC,oBAAI,KAAKlB,KAAL,CAAWG,cADL;AAEVgB,uBAAO,KAAKnB,KAAL,CAAWG,cAFR;AAGVG,uBAAO,KAAKN,KAAL,CAAWM,KAHR;AAIVC,uBAAO,KAAKP,KAAL,CAAWO,KAJR;AAKVC,yBAAS,KAAKR,KAAL,CAAWQ,OALV;AAMVC,0BAAU,KAAKT,KAAL,CAAWS,QANX;AAOVE,sBAAM,KAAKX,KAAL,CAAWW,IAPP;AAQVS,yBAAS;AARC,aAAd;;AAWA,gBAAI,KAAKpB,KAAL,CAAWW,IAAf,EAAqB;AACjB;AACA,oBAAI,OAAO,KAAKX,KAAL,CAAWW,IAAlB,KAA2B,QAA/B,EAAyC;AACrCM,4BAAQ,WAAR,IAAuB,IAAvB;AACH,iBAFD,MAEO;AACHA,4BAAQ,MAAR,IAAkB,IAAlB;AACH;AACJ;;AAGD,gBAAI,KAAKjB,KAAL,CAAWU,IAAf,EAAqB;AACjBO,wBAAQ,KAAKjB,KAAL,CAAWU,IAAnB,IAA2B,IAA3B;AACH;;AAED,gBAAIE,WAAW,KAAKZ,KAAL,CAAWY,QAAX,CAAoBS,KAApB,CAA0B,GAA1B,CAAf;;AAEAT,qBAASU,OAAT,CAAiB,eAAO;AACpBL,wBAAQM,GAAR,IAAe,IAAf;AACH,aAFD;;AAIA,mBAAON,OAAP;AACH;;;;EAzGqC,gBAAMO,a,UA2CrCC,Y,gBACA,uBAAaA,Y;AAChBb,cAAU;;kBA7CGb,Y","file":"popupelement.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\nexport const POSITIONS = [\n    'top left', 'top center', 'top right', 'right center', 'bottom right', 'bottom center', 'bottom left', 'left center'\n];\n\n/**\n * Popup component without animation transitions\n */\nexport default class PopupElement extends React.PureComponent {\n    static propTypes = {\n        /**\n         * Default properties\n         */\n        ...DefaultProps.propTypes,\n        /**\n         * Basic popup variation\n         */\n        basic: PropTypes.bool,\n        /**\n         * Fluid popup\n         */\n        fluid: PropTypes.bool,\n        /**\n         * No maximum width and continue to flow to fit its content\n         */\n        flowing: PropTypes.bool,\n        /**\n         * Inverted popup\n         */\n        inverted: PropTypes.bool,\n        /**\n         * Popup size\n         */\n        size: PropTypes.oneOf([\n            'mini', 'tiny', 'small', 'large', 'huge'\n        ]),\n        /**\n         * Make content of popup wide\n         */\n        wide: PropTypes.oneOfType([\n            PropTypes.bool,\n            PropTypes.string\n        ]),\n        /**\n         * Popup position\n         */\n        position: PropTypes.oneOf([\n            'top left', 'top center', 'top right', 'right center', 'bottom right', 'bottom center', 'bottom left', 'left center'\n        ])\n    };\n    \n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        position: 'top left'\n    };\n\n    constructor(props) {\n        super(props);\n        this.popupEl = null;\n    }\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        const { className, defaultClasses, children, component, basic, fluid, flowing, inverted, size, wide, position, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n        // other.style = Object.assign({}, style, pStyle);\n\n        const Component = component;\n\n        other.className = classNames(className, this.getClasses());\n\n        return (\n            <Component {...other}\n                ref={ref => this.popupEl = ref}\n            >\n                {children}\n            </Component>\n        )\n    }\n\n    getClasses() {\n        let classes = {\n            ui: this.props.defaultClasses,\n            popup: this.props.defaultClasses,\n            basic: this.props.basic,\n            fluid: this.props.fluid,\n            flowing: this.props.flowing,\n            inverted: this.props.inverted,\n            wide: this.props.wide,\n            visible: true\n        };\n        \n        if (this.props.wide) {\n            // very wide\n            if (typeof this.props.wide === 'string') {\n                classes['very wide'] = true;\n            } else {\n                classes['wide'] = true;\n            }\n        }\n        \n        \n        if (this.props.size) {\n            classes[this.props.size] = true;\n        }\n\n        let position = this.props.position.split(' ');\n\n        position.forEach(pos => {\n            classes[pos] = true;\n        });\n\n        return classes;\n    }\n}\n"]}