{"version":3,"sources":["../../../src/components/modules/tab/tabs.jsx"],"names":["Tabs","onMenuChange","value","props","onTabChange","activeTab","children","Children","toArray","shift","type","Components","TabMenu","cloneElement","menuValue","childrenWithoutMenu","map","child","Tab","key","active","component","defaultClasses","other","Component","renderMenu","renderTabs","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,I;;;;;;;;;;;;;;sLA4BjBC,Y,GAAe,UAACC,KAAD,EAAW;AAAA,8BACa,MAAKC,KADlB;AAAA,gBACdC,WADc,eACdA,WADc;AAAA,gBACDC,SADC,eACDA,SADC;;AAEtB,gBAAIH,SAASA,UAAUG,SAAvB,EAAkC;AAC9BD,4BAAYF,KAAZ;AACH;AACJ,S;;;AAZD;;AAKA;;;;qCASa;AAAA,gBACDG,SADC,GACa,KAAKF,KADlB,CACDE,SADC;AAET;;AACA,gBAAMC,WAAW,gBAAMC,QAAN,CAAeC,OAAf,CAAuB,KAAKL,KAAL,CAAWG,QAAlC,EAA4CG,KAA5C,EAAjB;AACA,gBAAIH,YAAYA,SAASI,IAAT,KAAkBV,KAAKW,UAAL,CAAgBC,OAAlD,EAA2D;AACvD,uBAAO,gBAAMC,YAAN,CAAmBP,QAAnB,EAA6B;AAChCQ,+BAAWT,SADqB;AAEhCJ,kCAAc,KAAKA;AAFa,iBAA7B,CAAP;AAIH;AACD,mBAAO,IAAP;AACH;;;qCAEY;AAAA,yBACuB,KAAKE,KAD5B;AAAA,gBACDG,QADC,UACDA,QADC;AAAA,gBACSD,SADT,UACSA,SADT;;AAET,gBAAMU,sBAAsB,gBAAMR,QAAN,CAAeC,OAAf,CAAuBF,QAAvB,CAA5B;AACAS,gCAAoBN,KAApB;;AAEA,mBAAOM,oBAAoBC,GAApB,CAAwB,iBAAS;AACpC,oBAAI,CAACC,KAAD,IAAUA,MAAMP,IAAN,KAAeV,KAAKW,UAAL,CAAgBO,GAA7C,EAAkD;AAC9C,2BAAO,IAAP;AACH;;AAED,uBAAO,gBAAML,YAAN,CAAmBI,KAAnB,EAA0B;AAC7BE,yBAAKF,MAAME,GAAN,GAAYF,MAAME,GAAlB,GAAwBF,MAAMd,KAAN,CAAYD,KADZ;AAE7BkB,4BAAQH,MAAMd,KAAN,CAAYD,KAAZ,KAAsBG;AAFD,iBAA1B,CAAP;AAIH,aATM,CAAP;AAUH;;;iCAEQ;AAAA,0BAC6E,KAAKF,KADlF;AAAA,gBACGkB,SADH,WACGA,SADH;AAAA,gBACcC,cADd,WACcA,cADd;AAAA,gBAC8BhB,QAD9B,WAC8BA,QAD9B;AAAA,gBACwCD,SADxC,WACwCA,SADxC;AAAA,gBACmDD,WADnD,WACmDA,WADnD;AAAA,gBACmEmB,KADnE;;AAEL,gBAAMC,YAAYH,SAAlB;;AAEA,mBACI;AAAC,yBAAD;AAAeE,qBAAf;AACK,qBAAKE,UAAL,EADL;AAEK,qBAAKC,UAAL;AAFL,aADJ;AAMH;;;;EA3E6B,gBAAMC,a,UAgB7BC,Y,gBACA,uBAAaA,Y;AAChBxB,iBAAa,uBAAM,CAAE;WAIlBO,U,GAAa;AAChBC,8BADgB;AAEhBM;AAFgB,C;kBAtBHlB,I","file":"tabs.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport DefaultProps from '../../defaultProps';\nimport TabMenu from './tabmenu';\nimport Tab from './tab';\n\nexport default class Tabs extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Active tab value\n         */\n        activeTab: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string\n        ]).isRequired,\n        /**\n         * Current tab want's to be changed\n         */\n        onTabChange: PropTypes.func\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        onTabChange: () => {}\n    };\n\n    /* eslint-disable */\n    static Components = {\n        TabMenu: TabMenu,\n        Tab: Tab\n    };\n    /* eslint-enable */\n\n    onMenuChange = (value) => {\n        const { onTabChange, activeTab } = this.props;\n        if (value && value !== activeTab) {\n            onTabChange(value);\n        }\n    }\n\n    renderMenu() {\n        const { activeTab } = this.props;\n        // Menu should be first element\n        const children = React.Children.toArray(this.props.children).shift();\n        if (children && children.type === Tabs.Components.TabMenu) {\n            return React.cloneElement(children, {\n                menuValue: activeTab,\n                onMenuChange: this.onMenuChange\n            });\n        }\n        return null;\n    }\n\n    renderTabs() {\n        const { children, activeTab } = this.props;\n        const childrenWithoutMenu = React.Children.toArray(children);\n        childrenWithoutMenu.shift();\n\n        return childrenWithoutMenu.map(child => {\n            if (!child || child.type !== Tabs.Components.Tab) {\n                return null;\n            }\n\n            return React.cloneElement(child, {\n                key: child.key ? child.key : child.props.value,\n                active: child.props.value === activeTab\n            });\n        })\n    }\n\n    render() {\n        const { component, defaultClasses, children, activeTab, onTabChange, ...other } = this.props;\n        const Component = component;\n\n        return (\n            <Component {...other}>\n                {this.renderMenu()}\n                {this.renderTabs()}\n            </Component>\n        );\n    }\n}\n"]}