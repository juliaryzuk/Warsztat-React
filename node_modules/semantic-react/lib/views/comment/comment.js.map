{"version":3,"sources":["../../../src/components/views/comment/comment.jsx"],"names":["Comment","commentChildren","contentChildren","Children","forEach","children","child","type","Components","Image","push","cloneElement","component","avatar","key","defaultClasses","props","className","other","comment","createElement","renderChildren","PureComponent","defaultProps","Content"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,O;;;;;;;;;;;;AAcjB;;yCAEiB;AACb,gBAAIC,kBAAkB,EAAtB;AACA,gBAAIC,kBAAkB,EAAtB;;AAEA,4BAAMC,QAAN,CAAeC,OAAf,CAAuB,KAAKC,QAA5B,EAAsC,iBAAS;AAC3C;AACA,oBAAIC,MAAMC,IAAN,KAAeP,QAAQQ,UAAR,CAAmBC,KAAtC,EAA6C;AAAE;AAC3CR,oCAAgBS,IAAhB,CACI,gBAAMC,YAAN,CACIL,KADJ,EAEI;AACIM,mCAAW,GADf;AAEIC,gCAAQ,IAFZ;AAGIC,6BAAK,eAHT;AAIIC,wCAAgB;AAJpB,qBAFJ,EAQIT,MAAMD,QARV,CADJ;AAYH,iBAbD,MAaO;AACH,2BAAOH,gBAAgBQ,IAAhB,CAAqBJ,KAArB,CAAP;AACH;AACJ,aAlBD;;AAoBAL,4BAAgBS,IAAhB,CACI;AAAC,uBAAD,CAAS,UAAT,CAAoB,OAApB;AAAA,kBAA4B,KAAI,gBAAhC;AAC6BR;AAD7B,aADJ;;AAMA,mBAAOD,eAAP;AACH;;AAtCD;;;;iCAwCS;AAAA,yBACgE,KAAKe,KADrE;AAAA,gBACGX,QADH,UACGA,QADH;AAAA,gBACaY,SADb,UACaA,SADb;AAAA,gBACwBL,SADxB,UACwBA,SADxB;AAAA,gBACmCG,cADnC,UACmCA,cADnC;AAAA,gBACsDG,KADtD;;AAELA,kBAAMD,SAAN,GAAkB,0BAAWA,SAAX,EAAsB,EAAEE,SAAS,IAAX,EAAtB,CAAlB;;AAEA,mBAAO,gBAAMC,aAAN,CACHR,SADG,EAEHM,KAFG,EAGH,KAAKG,cAAL,EAHG,CAAP;AAKH;;;;EA1DgC,gBAAMC,a,UAKhCC,Y,gBACA,uBAAaA,Y,UAIbf,U,GAAa;AAChBC,0BADgB;AAEhBe;AAFgB,C;kBAVHxB,O","file":"comment.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport Image from './../../elements/image/image';\nimport Content from './../../elements/simple/content';\nimport DefaultProps from '../../defaultProps';\n\nexport default class Comment extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps\n    };\n\n    /* eslint-disable */\n    static Components = {\n        Image: Image,\n        Content: Content\n    };\n    /* eslint-enable */\n\n    renderChildren() {\n        let commentChildren = [];\n        let contentChildren = [];\n\n        React.Children.forEach(this.children, child => {\n            // remove the Image default classes\n            if (child.type === Comment.Components.Image) { // eslint-disable-line\n                commentChildren.push(\n                    React.cloneElement(\n                        child,\n                        {\n                            component: 'a',\n                            avatar: true,\n                            key: 'commentAvatar',\n                            defaultClasses: false\n                        },\n                        child.children\n                    )\n                );\n            } else {\n                return contentChildren.push(child);\n            }\n        });\n\n        commentChildren.push(\n            <Comment.Components.Content key=\"commentContent\">\n                                        {contentChildren}\n            </Comment.Components.Content>\n        );\n\n        return commentChildren;\n    }\n\n    render() {\n        const { children, className, component, defaultClasses, ...other } = this.props;\n        other.className = classNames(className, { comment: true });\n\n        return React.createElement(\n            component,\n            other,\n            this.renderChildren()\n        );\n    }\n}\n"]}