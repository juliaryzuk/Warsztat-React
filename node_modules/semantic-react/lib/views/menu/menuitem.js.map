{"version":3,"sources":["../../../src/components/views/menu/menuitem.jsx"],"names":["MenuItem","onClick","event","preventDefault","props","menuValue","disabled","component","children","defaultClasses","active","color","other","className","getClasses","Component","classes","link","item","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;;IAGqBA,Q;;;;;;;;;;;;;;8LA2BjBC,O,GAAU,UAACC,KAAD,EAAW;AACjBA,kBAAMC,cAAN;AADiB,8BAEwB,MAAKC,KAF7B;AAAA,gBAETH,OAFS,eAETA,OAFS;AAAA,gBAEAI,SAFA,eAEAA,SAFA;AAAA,gBAEWC,QAFX,eAEWA,QAFX;;AAGjB,gBAAIL,WAAW,CAACK,QAAhB,EAA0BL,QAAQI,SAAR,EAAmBH,KAAnB;AAC7B,S;;;;;iCAEQ;AAAA,yBACyF,KAAKE,KAD9F;AAAA,gBACGG,SADH,UACGA,SADH;AAAA,gBACcC,QADd,UACcA,QADd;AAAA,gBACwBC,cADxB,UACwBA,cADxB;AAAA,gBACwCC,MADxC,UACwCA,MADxC;AAAA,gBACgDC,KADhD,UACgDA,KADhD;AAAA,gBACuDL,QADvD,UACuDA,QADvD;AAAA,gBACiED,SADjE,UACiEA,SADjE;AAAA,gBAC+EO,KAD/E;;AAELA,kBAAMC,SAAN,GAAkB,0BAAWD,MAAMC,SAAjB,EAA4B,KAAKC,UAAL,EAA5B,CAAlB;AACA,gBAAMC,YAAYR,SAAlB;AACA,mBACI;AAAC,yBAAD;AAAA,6BAAeK,KAAf;AACW,6BAAS,KAAKX,OADzB;AAEW,kCAAYI;AAFvB;AAIKG;AAJL,aADJ;AAQH;;;qCAEY;AACT,gBAAMQ,UAAU;AACZ;AACAN,wBAAQ,KAAKN,KAAL,CAAWM,MAFP;AAGZJ,0BAAU,KAAKF,KAAL,CAAWE,QAHT;AAIZW,sBAAM,KAAKb,KAAL,CAAWK,cAJL;AAKZ;AACAS,sBAAM,KAAKd,KAAL,CAAWK;AANL,aAAhB;AAQAO,oBAAQ,KAAKZ,KAAL,CAAWO,KAAnB,IAA4B,CAAC,CAAC,KAAKP,KAAL,CAAWO,KAAzC;AACA,mBAAOK,OAAP;AACH;;;;EA1DiC,gBAAMG,a,UAuBjCC,Y,gBACA,uBAAaA,Y;kBAxBHpB,Q","file":"menuitem.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\n/**\n * Menu/Dropdown item\n */\nexport default class MenuItem extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Is item active\n         */\n        active: PropTypes.bool,\n        /**\n         * Is item disabled\n         */\n        disabled: PropTypes.bool,\n        /**\n         * Item color\n         */\n        color: PropTypes.string,\n        /**\n         * Item value (used in controlled menu)\n         */\n        menuValue: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string\n        ])\n    };\n    static defaultProps = {\n        ...DefaultProps.defaultProps\n    };\n\n    onClick = (event) => {\n        event.preventDefault();\n        const { onClick, menuValue, disabled } = this.props;\n        if (onClick && !disabled) onClick(menuValue, event);\n    };\n\n    render() {\n        const { component, children, defaultClasses, active, color, disabled, menuValue, ...other } = this.props;\n        other.className = classNames(other.className, this.getClasses());\n        const Component = component;\n        return (\n            <Component {...other}\n                       onClick={this.onClick}\n                       data-value={menuValue}\n            >\n                {children}\n            </Component>\n        )\n    }\n\n    getClasses() {\n        const classes = {\n            // variations\n            active: this.props.active,\n            disabled: this.props.disabled,\n            link: this.props.defaultClasses,\n            // component\n            item: this.props.defaultClasses\n        };\n        classes[this.props.color] = !!this.props.color;\n        return classes;\n    }\n}\n"]}