{"version":3,"sources":["../../../src/components/views/feed/event.jsx"],"names":["Event","labelChildren","Children","forEach","children","child","index","type","Components","Image","Icon","push","cloneElement","key","image","defaultClasses","contentChildren","Images","className","props","component","other","event","createElement","renderLabel","renderContent","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,K;;;;;;;;;;;;AAejB;;sCAEc;AACV,gBAAIC,gBAAgB,EAApB;;AAEA,4BAAMC,QAAN,CAAeC,OAAf,CAAuB,KAAKC,QAA5B,EAAsC,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACpD;AACA,oBAAI,CAACD,MAAME,IAAN,KAAeP,MAAMQ,UAAN,CAAiBC,KAAhC,IAAyCJ,MAAME,IAAN,KAAeP,MAAMQ,UAAN,CAAiBE,IAA1E,KAAmFJ,UAAU,CAAjG,EAAoG;AAAE;AAClG,wBAAID,MAAME,IAAN,KAAeP,MAAMQ,UAAN,CAAiBC,KAApC,EAA2C;AAAE;AACzCR,sCAAcU,IAAd,CACI,gBAAMC,YAAN,CACIP,KADJ,EAEI;AACIQ,iCAAK,YADT;AAEIC,mCAAO,KAFX;AAGIC,4CAAgB;AAHpB,yBAFJ,EAOIV,MAAMD,QAPV,CADJ;AAWH,qBAZD,MAYO;AACHH,sCAAcU,IAAd,CAAmBN,KAAnB;AACH;AACJ;AACJ,aAnBD;;AAqBA,mBACI;AAAA;AAAA,kBAAK,WAAU,OAAf;AACMJ;AADN,aADJ;AAKH;;AArCD;;;;wCAuCgB;AACZ,gBAAIe,kBAAkB,EAAtB;;AAEA,4BAAMd,QAAN,CAAeC,OAAf,CAAuB,KAAKC,QAA5B,EAAsC,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACpD,oBAAID,MAAME,IAAN,KAAeP,MAAMQ,UAAN,CAAiBS,MAApC,EAA4C;AAAE;AAC1CD,oCAAgBL,IAAhB,CACI,gBAAMC,YAAN,CACIP,KADJ,EAEI;AACIU,wCAAgB,KADpB;AAEIG,mCAAW;AAFf,qBAFJ,CADJ;AASH,iBAVD,MAUO,IAAIb,MAAME,IAAN,KAAeP,MAAMQ,UAAN,CAAiBC,KAAhC,IAAyCJ,MAAME,IAAN,KAAeP,MAAMQ,UAAN,CAAiBE,IAA7E,EAAmF;AAAE;AACxFM,oCAAgBL,IAAhB,CAAqBN,KAArB;AACH,iBAFM,MAEA,IAAI,CAACA,MAAME,IAAN,KAAeP,MAAMQ,UAAN,CAAiBC,KAAhC,IAAyCJ,MAAME,IAAN,KAAeP,MAAMQ,UAAN,CAAiBE,IAA1E,KAAmFJ,QAAQ,CAA/F,EAAkG;AAAE;AACvGU,oCAAgBL,IAAhB,CAAqBN,KAArB;AACH;AACJ,aAhBD;;AAkBA,mBACI;AAAA;AAAA,kBAAK,WAAU,SAAf;AACMW;AADN,aADJ;AAKH;;;iCAEQ;AAAA,yBACgE,KAAKG,KADrE;AAAA,gBACGf,QADH,UACGA,QADH;AAAA,gBACac,SADb,UACaA,SADb;AAAA,gBACwBE,SADxB,UACwBA,SADxB;AAAA,gBACmCL,cADnC,UACmCA,cADnC;AAAA,gBACsDM,KADtD;;AAELA,kBAAMH,SAAN,GAAkB,0BAAWA,SAAX,EAAsB,EAAEI,OAAO,IAAT,EAAtB,CAAlB;;AAEA,mBAAO,gBAAMC,aAAN,CACHH,SADG,EAEHC,KAFG,EAGH,CACI,KAAKG,WAAL,CAAiBpB,QAAjB,CADJ,EAEI,KAAKqB,aAAL,CAAmBrB,QAAnB,CAFJ,CAHG,CAAP;AAQH;;;;EAxF8B,gBAAMsB,a,UAK9BC,Y,gBACA,uBAAaA,Y,UAIbnB,U,GAAa;AAChBC,0BADgB;AAEhBQ,4BAFgB;AAGhBP;AAHgB,C;kBAVHV,K","file":"event.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport Image from './../../elements/image/image';\nimport Images from './../../elements/image/images';\nimport Icon from './../../elements/icon/icon';\nimport DefaultProps from '../../defaultProps';\n\nexport default class Event extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps\n    };\n\n    /* eslint-disable */\n    static Components = {\n        Image: Image,\n        Images: Images,\n        Icon: Icon\n    };\n    /* eslint-enable */\n\n    renderLabel() {\n        let labelChildren = [];\n\n        React.Children.forEach(this.children, (child, index) => {\n            // remove the Image default classes\n            if ((child.type === Event.Components.Image || child.type === Event.Components.Icon) && index === 0) { // eslint-disable-line\n                if (child.type === Event.Components.Image) { // eslint-disable-line\n                    labelChildren.push(\n                        React.cloneElement(\n                            child,\n                            {\n                                key: 'eventLabel',\n                                image: false,\n                                defaultClasses: false\n                            },\n                            child.children\n                        )\n                    );\n                } else {\n                    labelChildren.push(child);\n                }\n            }\n        });\n\n        return (\n            <div className=\"label\">\n                 {labelChildren}\n            </div>\n        )\n    }\n\n    renderContent() {\n        let contentChildren = [];\n\n        React.Children.forEach(this.children, (child, index) => {\n            if (child.type === Event.Components.Images) { // eslint-disable-line\n                contentChildren.push(\n                    React.cloneElement(\n                        child,\n                        {\n                            defaultClasses: false,\n                            className: 'extra images'\n                        }\n                    )\n                );\n            } else if (child.type !== Event.Components.Image && child.type !== Event.Components.Icon) { // eslint-disable-line\n                contentChildren.push(child);\n            } else if ((child.type === Event.Components.Image || child.type === Event.Components.Icon) && index > 0) { // eslint-disable-line\n                contentChildren.push(child);\n            }\n        });\n\n        return (\n            <div className=\"content\">\n                 {contentChildren}\n            </div>\n        );\n    }\n\n    render() {\n        const { children, className, component, defaultClasses, ...other } = this.props;\n        other.className = classNames(className, { event: true });\n\n        return React.createElement(\n            component,\n            other,\n            [\n                this.renderLabel(children),\n                this.renderContent(children)\n            ]\n        );\n    }\n}\n\n"]}