{"version":3,"sources":["../../../src/components/collections/grid/column.jsx"],"names":["validProps","aligned","floated","valigned","Column","props","component","children","defaultClasses","only","color","width","mobileWidth","tabletWidth","computerWidth","largeScreenWidth","wideScreenWidth","other","Component","className","getClasses","classes","column","device","Array","isArray","join","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,aAAa;AACfC,aAAS,CAAC,OAAD,EAAU,MAAV,EAAkB,WAAlB,EAA+B,QAA/B,CADM;AAEfC,aAAS,CAAC,OAAD,EAAU,MAAV,CAFM;AAGfC,cAAU,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB;;AAHK,CAAnB;;AAOA;;;IAGqBC,M;;;;;;;;;;;iCA4DR;AACL;AADK,yBAKD,KAAKC,KALJ;AAAA,gBAGDJ,OAHC,UAGDA,OAHC;AAAA,gBAGQK,SAHR,UAGQA,SAHR;AAAA,gBAGmBC,QAHnB,UAGmBA,QAHnB;AAAA,gBAG6BC,cAH7B,UAG6BA,cAH7B;AAAA,gBAG6CN,OAH7C,UAG6CA,OAH7C;AAAA,gBAGsDO,IAHtD,UAGsDA,IAHtD;AAAA,gBAG4DC,KAH5D,UAG4DA,KAH5D;AAAA,gBAGmEC,KAHnE,UAGmEA,KAHnE;AAAA,gBAG0EC,WAH1E,UAG0EA,WAH1E;AAAA,gBAGuFC,WAHvF,UAGuFA,WAHvF;AAAA,gBAIDC,aAJC,UAIDA,aAJC;AAAA,gBAIcC,gBAJd,UAIcA,gBAJd;AAAA,gBAIgCC,eAJhC,UAIgCA,eAJhC;AAAA,gBAIiDb,QAJjD,UAIiDA,QAJjD;AAAA,gBAI8Dc,KAJ9D;AAML;;;AACA,gBAAIC,YAAYZ,SAAhB;AACAW,kBAAME,SAAN,GAAkB,0BAAWF,MAAME,SAAjB,EAA4B,KAAKC,UAAL,EAA5B,CAAlB;;AAEA,mBACI;AAAC,yBAAD;AAAeH,qBAAf;AACYV;AADZ,aADJ;AAKH;;;qCAEY;AACT,gBAAIc,UAAU;AACVC,wBAAQ,KAAKjB,KAAL,CAAWG;AADT,aAAd;;AAIAa,oBAAQ,KAAKhB,KAAL,CAAWK,KAAnB,IAA4B,CAAC,CAAC,KAAKL,KAAL,CAAWK,KAAzC;;AAEA;AACA,gBAAI,KAAKL,KAAL,CAAWM,KAAX,IAAoB,KAAKN,KAAL,CAAWM,KAAX,GAAmB,CAAvC,IAA4C,KAAKN,KAAL,CAAWM,KAAX,IAAoB,EAApE,EAAwE;AACpEU,wBAAW,mBAAQ,KAAKhB,KAAL,CAAWM,KAAnB,CAAX,cAA+C,IAA/C;AACH;;AAED,gBAAI,KAAKN,KAAL,CAAWO,WAAX,IAA0B,KAAKP,KAAL,CAAWO,WAAX,GAAyB,CAAnD,IAAwD,KAAKP,KAAL,CAAWO,WAAX,IAA0B,EAAtF,EAA0F;AACtFS,wBAAW,mBAAQ,KAAKhB,KAAL,CAAWO,WAAnB,CAAX,qBAA4D,IAA5D;AACH;;AAED,gBAAI,KAAKP,KAAL,CAAWQ,WAAX,IAA0B,KAAKR,KAAL,CAAWQ,WAAX,GAAyB,CAAnD,IAAwD,KAAKR,KAAL,CAAWQ,WAAX,IAA0B,EAAtF,EAA0F;AACtFQ,wBAAW,mBAAQ,KAAKhB,KAAL,CAAWQ,WAAnB,CAAX,qBAA4D,IAA5D;AACH;;AAED,gBAAI,KAAKR,KAAL,CAAWS,aAAX,IAA4B,KAAKT,KAAL,CAAWS,aAAX,GAA2B,CAAvD,IAA4D,KAAKT,KAAL,CAAWS,aAAX,IAA4B,EAA5F,EAAgG;AAC5FO,wBAAW,mBAAQ,KAAKhB,KAAL,CAAWS,aAAnB,CAAX,uBAAgE,IAAhE;AACH;;AAED,gBAAI,KAAKT,KAAL,CAAWU,gBAAX,IAA+B,KAAKV,KAAL,CAAWU,gBAAX,GAA8B,CAA7D,IAAkE,KAAKV,KAAL,CAAWU,gBAAX,IAA+B,EAArG,EAAyG;AACrGM,wBAAW,mBAAQ,KAAKhB,KAAL,CAAWU,gBAAnB,CAAX,2BAAuE,IAAvE;AACH;;AAED,gBAAI,KAAKV,KAAL,CAAWW,eAAX,IAA8B,KAAKX,KAAL,CAAWW,eAAX,GAA6B,CAA3D,IAAgE,KAAKX,KAAL,CAAWW,eAAX,IAA8B,EAAlG,EAAsG;AAClGK,wBAAW,mBAAQ,KAAKhB,KAAL,CAAWW,eAAnB,CAAX,yBAAoE,IAApE;AACH;;AAED,gBAAI,KAAKX,KAAL,CAAWI,IAAf,EAAqB;AACjB,oBAAIc,eAAJ;AACA,oBAAIC,MAAMC,OAAN,CAAc,KAAKpB,KAAL,CAAWI,IAAzB,CAAJ,EAAoC;AAChCc,6BAAS,KAAKlB,KAAL,CAAWI,IAAX,CAAgBiB,IAAhB,CAAqB,GAArB,CAAT;AACH,iBAFD,MAEO;AACHH,6BAAS,KAAKlB,KAAL,CAAWI,IAApB;AACH;AACD,oBAAIc,MAAJ,EAAY;AACRF,4BAAWE,MAAX,cAA4B,IAA5B;AACH;AACJ;;AAED,mBAAO,mCAAmBF,OAAnB,EAA4B,KAAKhB,KAAjC,EAAwCL,UAAxC,EAAoD,EAAEG,UAAU,SAAZ,EAApD,CAAP;AACH;;;;EA1H+B,gBAAMwB,a,UAwD/BC,Y,gBACA,uBAAaA,Y;kBAzDHxB,M","file":"column.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Numbers, validateClassProps } from '../../utilities';\nimport DefaultProps from '../../defaultProps';\nimport classNames from 'classnames';\n\nconst validProps = {\n    aligned: ['right', 'left', 'justified', 'center'],\n    floated: ['right', 'left'],\n    valigned: ['top', 'middle', 'bottom']\n\n};\n\n/**\n * Grid column\n */\nexport default class Column extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Horizontal content alignment\n         */\n        aligned: PropTypes.oneOf(['right', 'left', 'center']),\n        /**\n         * Float to the right or left edge of the row\n         */\n        floated: PropTypes.oneOf(['right', 'left']),\n        /**\n         * Only visible for types. Could be single type string or array, i.e. only={[\"mobile\",\"tablet\"]}\n         */\n        only: PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'mobile', 'tablet', 'computer', 'large screen', 'widescreen'\n            ]),\n            PropTypes.arrayOf(PropTypes.oneOf([\n                'mobile', 'tablet', 'computer', 'large screen', 'widescreen'\n            ]))\n        ]),\n        /**\n         * Column color\n         */\n        color: PropTypes.string,\n        /**\n         * Column width for all device types\n         */\n        width: PropTypes.number,\n        /**\n         * Column width for mobile\n         */\n        mobileWidth: PropTypes.number,\n        /**\n         * Column width for tablet\n         */\n        tabletWidth: PropTypes.number,\n        /**\n         * Column width for computer\n         */\n        computerWidth: PropTypes.number,\n        /**\n         * Column width for large screens\n         */\n        largeScreenWidth: PropTypes.number,\n        /**\n         * Column width for wide screens\n         */\n        wideScreenWidth: PropTypes.number,\n        /**\n         * Vertical content alignment\n         */\n        valigned: PropTypes.oneOf(['top', 'middle', 'bottom'])\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps\n    };\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        let {\n            aligned, component, children, defaultClasses, floated, only, color, width, mobileWidth, tabletWidth,\n            computerWidth, largeScreenWidth, wideScreenWidth, valigned, ...other\n        } = this.props;\n        /* eslint-enable no-use-before-define */\n        let Component = component;\n        other.className = classNames(other.className, this.getClasses());\n\n        return (\n            <Component {...other}>\n                       {children}\n            </Component>\n        );\n    }\n\n    getClasses() {\n        let classes = {\n            column: this.props.defaultClasses\n        };\n\n        classes[this.props.color] = !!this.props.color;\n\n        // Widths\n        if (this.props.width && this.props.width > 0 && this.props.width <= 16) {\n            classes[`${Numbers[this.props.width]} wide`] = true;\n        }\n\n        if (this.props.mobileWidth && this.props.mobileWidth > 0 && this.props.mobileWidth <= 16) {\n            classes[`${Numbers[this.props.mobileWidth]} wide mobile`] = true;\n        }\n\n        if (this.props.tabletWidth && this.props.tabletWidth > 0 && this.props.tabletWidth <= 16) {\n            classes[`${Numbers[this.props.tabletWidth]} wide tablet`] = true;\n        }\n\n        if (this.props.computerWidth && this.props.computerWidth > 0 && this.props.computerWidth <= 16) {\n            classes[`${Numbers[this.props.computerWidth]} wide computer`] = true;\n        }\n\n        if (this.props.largeScreenWidth && this.props.largeScreenWidth > 0 && this.props.largeScreenWidth <= 16) {\n            classes[`${Numbers[this.props.largeScreenWidth]} wide large screen`] = true;\n        }\n\n        if (this.props.wideScreenWidth && this.props.wideScreenWidth > 0 && this.props.wideScreenWidth <= 16) {\n            classes[`${Numbers[this.props.wideScreenWidth]} wide widescreen`] = true;\n        }\n\n        if (this.props.only) {\n            let device;\n            if (Array.isArray(this.props.only)) {\n                device = this.props.only.join(' ');\n            } else {\n                device = this.props.only;\n            }\n            if (device) {\n                classes[`${device} only`] = true;\n            }\n        }\n\n        return validateClassProps(classes, this.props, validProps, { valigned: 'aligned' });\n    }\n}\n"]}