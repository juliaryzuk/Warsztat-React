{"version":3,"sources":["../../../src/components/collections/table/td.jsx"],"names":["validProps","aligned","valigned","Td","props","children","className","defaultClasses","collapsing","component","singleLine","selectable","emphasis","other","getClasses","createElement","classes","type","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAIA,aAAa;AACbC,aAAS,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CADI;AAEbC,cAAU,CAAC,KAAD,EAAQ,QAAR,EAAkB,QAAlB;AAFG,CAAjB;;IAKqBC,E;;;;;;;;;;;iCAkCR;AACL;AADK,yBAGsB,KAAKC,KAH3B;AAAA,gBAECH,OAFD,UAECA,OAFD;AAAA,gBAEUI,QAFV,UAEUA,QAFV;AAAA,gBAEoBC,SAFpB,UAEoBA,SAFpB;AAAA,gBAE+BC,cAF/B,UAE+BA,cAF/B;AAAA,gBAE+CC,UAF/C,UAE+CA,UAF/C;AAAA,gBAE2DC,SAF3D,UAE2DA,SAF3D;AAAA,gBAEsEC,UAFtE,UAEsEA,UAFtE;AAAA,gBAEkFC,UAFlF,UAEkFA,UAFlF;AAAA,gBAE8FC,QAF9F,UAE8FA,QAF9F;AAAA,gBAGDV,QAHC,UAGDA,QAHC;AAAA,gBAGYW,KAHZ;AAIL;;AAEAA,kBAAMP,SAAN,GAAkB,0BAAWA,SAAX,EAAsB,KAAKQ,UAAL,EAAtB,CAAlB;;AAEA,mBAAO,gBAAMC,aAAN,CACHN,SADG,EAEHI,KAFG,EAGHR,QAHG,CAAP;AAKH;;;qCAEY;AACT,gBAAIW,UAAU;AACVR,4BAAY,KAAKJ,KAAL,CAAWI,UADb;AAEVG,4BAAY,KAAKP,KAAL,CAAWO,UAFb;AAGV,+BAAe,KAAKP,KAAL,CAAWM;AAHhB,aAAd;AAKAM,oBAAQ,KAAKZ,KAAL,CAAWQ,QAAnB,IAA+B,CAAC,CAAC,KAAKR,KAAL,CAAWQ,QAA5C;;AAEAI,oBAAQ,KAAKZ,KAAL,CAAWa,IAAnB,IAA2B,CAAC,CAAC,KAAKb,KAAL,CAAWa,IAAxC;;AAEA,mBAAO,mCAAmBD,OAAnB,EAA4B,KAAKZ,KAAjC,EAAwCJ,UAAxC,EAAoD,EAAEE,UAAU,SAAZ,EAApD,CAAP;AACH;;;;EA5D2B,gBAAMgB,a,UA6B3BC,Y,gBACA,uBAAaA,Y;AAChBV,eAAW;;kBA/BEN,E","file":"td.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { validateClassProps } from '../../utilities';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\nlet validProps = {\n    aligned: ['right', 'left', 'center'],\n    valigned: ['top', 'bottom', 'middle']\n};\n\nexport default class Td extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Cell text alignment\n         */\n        aligned: PropTypes.oneOf(['right', 'left', 'center']),\n        /**\n         * A cell can be collapsing so that it only uses as much space as required\n         */\n        collapsing: PropTypes.bool,\n        /**\n         * A table cell can be selectable\n         */\n        selectable: PropTypes.bool,\n        /**\n         * Content should remain on a single line, and not wrap.\n         */\n        singleLine: PropTypes.bool,\n        /**\n         * Cell emphasis\n         */\n        emphasis: PropTypes.oneOf(['negative', 'positive', 'error', 'warning']),\n        /**\n         * Vertical cell alignment\n         */\n        valigned: PropTypes.oneOf(['top', 'bottom', 'middle'])\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        component: 'td'\n    };\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        let { aligned, children, className, defaultClasses, collapsing, component, singleLine, selectable, emphasis,\n            valigned, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n\n        other.className = classNames(className, this.getClasses());\n\n        return React.createElement(\n            component,\n            other,\n            children\n        );\n    }\n\n    getClasses() {\n        let classes = {\n            collapsing: this.props.collapsing,\n            selectable: this.props.selectable,\n            'single line': this.props.singleLine\n        };\n        classes[this.props.emphasis] = !!this.props.emphasis;\n\n        classes[this.props.type] = !!this.props.type;\n\n        return validateClassProps(classes, this.props, validProps, { valigned: 'aligned' });\n    }\n}\n"]}