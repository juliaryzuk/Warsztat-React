{"version":3,"sources":["../../../src/components/collections/form/form.jsx"],"names":["Form","props","children","className","component","defaultClasses","equalWidth","inverted","loading","size","state","other","getClasses","createElement","classes","ui","error","success","warning","form","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqBA,I;;;;;;;;;;;iCAkCR;AACL;AADK,yBAE0G,KAAKC,KAF/G;AAAA,gBAECC,QAFD,UAECA,QAFD;AAAA,gBAEWC,SAFX,UAEWA,SAFX;AAAA,gBAEsBC,SAFtB,UAEsBA,SAFtB;AAAA,gBAEiCC,cAFjC,UAEiCA,cAFjC;AAAA,gBAEiDC,UAFjD,UAEiDA,UAFjD;AAAA,gBAE6DC,QAF7D,UAE6DA,QAF7D;AAAA,gBAEuEC,OAFvE,UAEuEA,OAFvE;AAAA,gBAEgFC,IAFhF,UAEgFA,IAFhF;AAAA,gBAEsFC,KAFtF,UAEsFA,KAFtF;AAAA,gBAEgGC,KAFhG;AAGL;;;AACAA,kBAAMR,SAAN,GAAkB,0BAAWA,SAAX,EAAsB,KAAKS,UAAL,EAAtB,CAAlB;;AAEA,mBAAO,gBAAMC,aAAN,CACHT,SADG,EAEHO,KAFG,EAGHT,QAHG,CAAP;AAKH;;;qCAEY;AACT,gBAAIY,UAAU;AACVC,oBAAI,KAAKd,KAAL,CAAWI,cADL;;AAGVG,yBAAS,KAAKP,KAAL,CAAWO,OAHV;;AAKVQ,uBAAO,KAAKf,KAAL,CAAWS,KAAX,KAAqB,OALlB;AAMVO,yBAAS,KAAKhB,KAAL,CAAWS,KAAX,KAAqB,SANpB;AAOVQ,yBAAS,KAAKjB,KAAL,CAAWS,KAAX,KAAqB,SAPpB;;AASVH,0BAAU,KAAKN,KAAL,CAAWM,QATX;;AAWVY,sBAAM,KAAKlB,KAAL,CAAWI;AAXP,aAAd;;AAcA,gBAAI,KAAKJ,KAAL,CAAWK,UAAf,EAA2B;AACvBQ,wBAAQ,aAAR,IAAyB,IAAzB;AACH;;AAEDA,oBAAQ,KAAKb,KAAL,CAAWQ,IAAnB,IAA2B,CAAC,CAAC,KAAKR,KAAL,CAAWQ,IAAxC;;AAEA,mBAAOK,OAAP;AACH;;;;EArE6B,gBAAMM,a,UA6B7BC,Y,gBACA,uBAAaA,Y;AAChBjB,eAAW;;kBA/BEJ,I","file":"form.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\nexport default class Form extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Forms can automatically divide fields to be equal width\n         */\n        equalWidth: PropTypes.bool,\n        /**\n         * A form on a dark background may have to invert its color scheme\n         */\n        inverted: PropTypes.bool,\n        /**\n         * If a form is in loading state, it will automatically show a loading indicator.\n         */\n        loading: PropTypes.bool,\n        /**\n         * A form can vary in size\n         */\n        size: PropTypes.string,\n        /**\n         * Form state\n         */\n        state: PropTypes.oneOf([\n            'success',\n            'error',\n            'warning'\n        ])\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps,\n        component: 'form'\n    };\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        let { children, className, component, defaultClasses, equalWidth, inverted, loading, size, state, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n        other.className = classNames(className, this.getClasses());\n\n        return React.createElement(\n            component,\n            other,\n            children\n        );\n    }\n\n    getClasses() {\n        let classes = {\n            ui: this.props.defaultClasses,\n\n            loading: this.props.loading,\n\n            error: this.props.state === 'error',\n            success: this.props.state === 'success',\n            warning: this.props.state === 'warning',\n\n            inverted: this.props.inverted,\n\n            form: this.props.defaultClasses\n        };\n\n        if (this.props.equalWidth) {\n            classes['equal width'] = true;\n        }\n\n        classes[this.props.size] = !!this.props.size;\n\n        return classes;\n    }\n}\n"]}