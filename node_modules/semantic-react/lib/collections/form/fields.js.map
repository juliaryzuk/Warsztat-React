{"version":3,"sources":["../../../src/components/collections/form/fields.jsx"],"names":["Fields","props","children","className","component","defaultClasses","equalWidth","fluid","grouped","inline","other","getClasses","createElement","classes","childCount","Components","Field","fields","PureComponent","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAGqBA,M;;;;;;;;;;;;AA6BjB;;iCAES;AACL;AADK,yBAEkG,KAAKC,KAFvG;AAAA,gBAECC,QAFD,UAECA,QAFD;AAAA,gBAEWC,SAFX,UAEWA,SAFX;AAAA,gBAEsBC,SAFtB,UAEsBA,SAFtB;AAAA,gBAEiCC,cAFjC,UAEiCA,cAFjC;AAAA,gBAEiDC,UAFjD,UAEiDA,UAFjD;AAAA,gBAE6DC,KAF7D,UAE6DA,KAF7D;AAAA,gBAEoEC,OAFpE,UAEoEA,OAFpE;AAAA,gBAE6EC,MAF7E,UAE6EA,MAF7E;AAAA,gBAEwFC,KAFxF;AAGL;;;AACAA,kBAAMP,SAAN,GAAkB,0BAAWA,SAAX,EAAsB,KAAKQ,UAAL,EAAtB,CAAlB;;AAEA,mBAAO,gBAAMC,aAAN,CACHR,SADG,EAEHM,KAFG,EAGHR,QAHG,CAAP;AAKH;;AAjBD;;;;qCAmBa;AACT,gBAAIW,UAAU;AACVL,yBAAS,KAAKP,KAAL,CAAWO,OADV;AAEVC,wBAAQ,KAAKR,KAAL,CAAWQ;AAFT,aAAd;;AAKA,gBAAI,KAAKR,KAAL,CAAWM,KAAf,EAAsB;AAClB,oBAAIO,aAAa,8BAAc,KAAKb,KAAL,CAAWC,QAAzB,EAAmCF,OAAOe,UAAP,CAAkBC,KAArD,CAAjB,CADkB,CAC4D;;AAE9E,oBAAIF,aAAa,CAAb,IAAmBA,cAAc,EAArC,EAAyC;AACrCD,4BAAQ,mBAAQC,UAAR,CAAR,IAA+B,IAA/B;AACH;AACJ;;AAED,gBAAI,KAAKb,KAAL,CAAWK,UAAf,EAA2B;AACvBO,wBAAQ,aAAR,IAAyB,IAAzB;AACH;;AAEDA,oBAAQI,MAAR,GAAiB,KAAKhB,KAAL,CAAWI,cAA5B;;AAEA,mBAAOQ,OAAP;AACH;;;;EAjE+B,gBAAMK,a,UAqB/BC,Y,gBACA,uBAAaA,Y,UAIbJ,U,GAAa;AAChBC;AADgB,C;kBA1BHhB,M","file":"fields.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { countChildren, Numbers } from '../../utilities';\nimport Field from './field';\nimport classNames from 'classnames';\nimport DefaultProps from '../../defaultProps';\n\n\nexport default class Fields extends React.PureComponent {\n    static propTypes = {\n        ...DefaultProps.propTypes,\n        /**\n         * Fields can automatically divide fields to be equal width\n         */\n        equalWidth: PropTypes.bool,\n        /**\n         * Fields can have their widths divided evenly\n         */\n        fluid: PropTypes.bool,\n        /**\n         * Fields can show related choices\n         */\n        grouped: PropTypes.bool,\n        /**\n         * Multiple fields may be inline in a row\n         */\n        inline: PropTypes.bool\n    };\n\n    static defaultProps = {\n        ...DefaultProps.defaultProps\n    };\n\n    /* eslint-disable */\n    static Components = {\n        Field: Field\n    };\n    /* eslint-enable */\n\n    render() {\n        /* eslint-disable no-use-before-define */\n        let { children, className, component, defaultClasses, equalWidth, fluid, grouped, inline, ...other } = this.props;\n        /* eslint-enable no-use-before-define */\n        other.className = classNames(className, this.getClasses());\n\n        return React.createElement(\n            component,\n            other,\n            children\n        );\n    }\n\n    getClasses() {\n        let classes = {\n            grouped: this.props.grouped,\n            inline: this.props.inline\n        };\n\n        if (this.props.fluid) {\n            let childCount = countChildren(this.props.children, Fields.Components.Field); // eslint-disable-line\n\n            if (childCount > 0  && childCount <= 12) {\n                classes[Numbers[childCount]] = true;\n            }\n        }\n\n        if (this.props.equalWidth) {\n            classes['equal width'] = true;\n        }\n\n        classes.fields = this.props.defaultClasses;\n\n        return classes;\n    }\n}\n\n"]}