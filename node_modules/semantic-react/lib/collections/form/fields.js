'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _utilities = require('../../utilities');

var _field = require('./field');

var _field2 = _interopRequireDefault(_field);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _defaultProps = require('../../defaultProps');

var _defaultProps2 = _interopRequireDefault(_defaultProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Fields = (_temp = _class = function (_React$PureComponent) {
    _inherits(Fields, _React$PureComponent);

    function Fields() {
        _classCallCheck(this, Fields);

        return _possibleConstructorReturn(this, (Fields.__proto__ || Object.getPrototypeOf(Fields)).apply(this, arguments));
    }

    _createClass(Fields, [{
        key: 'render',

        /* eslint-enable */

        value: function render() {
            /* eslint-disable no-use-before-define */
            var _props = this.props,
                children = _props.children,
                className = _props.className,
                component = _props.component,
                defaultClasses = _props.defaultClasses,
                equalWidth = _props.equalWidth,
                fluid = _props.fluid,
                grouped = _props.grouped,
                inline = _props.inline,
                other = _objectWithoutProperties(_props, ['children', 'className', 'component', 'defaultClasses', 'equalWidth', 'fluid', 'grouped', 'inline']);
            /* eslint-enable no-use-before-define */


            other.className = (0, _classnames2.default)(className, this.getClasses());

            return _react2.default.createElement(component, other, children);
        }

        /* eslint-disable */

    }, {
        key: 'getClasses',
        value: function getClasses() {
            var classes = {
                grouped: this.props.grouped,
                inline: this.props.inline
            };

            if (this.props.fluid) {
                var childCount = (0, _utilities.countChildren)(this.props.children, Fields.Components.Field); // eslint-disable-line

                if (childCount > 0 && childCount <= 12) {
                    classes[_utilities.Numbers[childCount]] = true;
                }
            }

            if (this.props.equalWidth) {
                classes['equal width'] = true;
            }

            classes.fields = this.props.defaultClasses;

            return classes;
        }
    }]);

    return Fields;
}(_react2.default.PureComponent), _class.defaultProps = _extends({}, _defaultProps2.default.defaultProps), _class.Components = {
    Field: _field2.default
}, _temp);
exports.default = Fields;
//# sourceMappingURL=fields.js.map