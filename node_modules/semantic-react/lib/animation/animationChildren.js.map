{"version":3,"sources":["../../src/components/animation/animationChildren.jsx"],"names":["SemanticCSSTransitionChildren","props","componentWillAppear","done","runOnMount","componentWillEnter","componentDidAppear","onEnter","enter","enterTransition","componentDidEnter","componentWillLeave","leave","leaveTransition","componentDidLeave","onLeave","element","findDOMNode","enterDuration","classList","contains","add","remove","style","animationDuration","enterClassNames","split","name","timeout","endListener","clearTimeout","setTimeout","transitionTimeouts","push","leaveDuration","leaveClassNames","forEach","Children","only","children","Component","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;;;;;IAOqBA,6B;;;AAyBjB,2CAAYC,KAAZ,EAAmB;AAAA;;AAAA,kKACTA,KADS;;AAAA,cAkBnBC,mBAlBmB,GAkBG,UAACC,IAAD,EAAU;AAAA,gBACpBC,UADoB,GACL,MAAKH,KADA,CACpBG,UADoB;;AAE5B,gBAAIA,UAAJ,EAAgB;AACZ,sBAAKC,kBAAL,CAAwBF,IAAxB;AACH,aAFD,MAEO;AACHA;AACH;AACJ,SAzBkB;;AAAA,cA2BnBG,kBA3BmB,GA2BE,YAAM;AAAA,8BACS,MAAKL,KADd;AAAA,gBACfG,UADe,eACfA,UADe;AAAA,gBACHG,OADG,eACHA,OADG;;AAEvB,gBAAIH,UAAJ,EAAgB;AACZG;AACH;AACJ,SAhCkB;;AAAA,cAkCnBF,kBAlCmB,GAkCE,UAACF,IAAD,EAAU;AAAA,gBACnBK,KADmB,GACT,MAAKP,KADI,CACnBO,KADmB;;AAE3B,gBAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,sBAAKC,eAAL,CAAqBN,IAArB;AACH,aAFD,MAEO;AACHA;AACH;AACJ,SAzCkB;;AAAA,cA2CnBO,iBA3CmB,GA2CC,YAAM;AACtB,kBAAKT,KAAL,CAAWM,OAAX;AACH,SA7CkB;;AAAA,cAgDnBI,kBAhDmB,GAgDE,UAACR,IAAD,EAAU;AAAA,gBACnBS,KADmB,GACT,MAAKX,KADI,CACnBW,KADmB;;AAE3B,gBAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,sBAAKC,eAAL,CAAqBV,IAArB;AACH,aAFD,MAEO;AACHA;AACH;AACJ,SAvDkB;;AAAA,cAyDnBW,iBAzDmB,GAyDC,YAAM;AACtB,kBAAKb,KAAL,CAAWc,OAAX;AACH,SA3DkB;;AAAA,cA6DnBN,eA7DmB,GA6DD,UAACN,IAAD,EAAU;AACxB,gBAAMa,UAAU,mBAASC,WAAT,OAAhB;AADwB,+BAES,MAAKhB,KAFd;AAAA,gBAEhBO,KAFgB,gBAEhBA,KAFgB;AAAA,gBAETU,aAFS,gBAETA,aAFS;;AAGxB,gBAAI,CAACF,OAAL,EAAc;AACVb;AACA;AACH;;AAED,gBAAI,CAACa,QAAQG,SAAR,CAAkBC,QAAlB,CAA2B,YAA3B,CAAL,EAA+C;AAC3CJ,wBAAQG,SAAR,CAAkBE,GAAlB,CAAsB,YAAtB;AACH;AACD,gBAAIL,QAAQG,SAAR,CAAkBC,QAAlB,CAA2B,QAA3B,CAAJ,EAA0C;AACtCJ,wBAAQG,SAAR,CAAkBG,MAAlB,CAAyB,QAAzB;AACH;AACD,gBAAI,CAACN,QAAQG,SAAR,CAAkBC,QAAlB,CAA2B,SAA3B,CAAL,EAA4C;AACxCJ,wBAAQG,SAAR,CAAkBE,GAAlB,CAAsB,SAAtB;AACH;;AAED;AACA,gBAAI,CAACH,aAAL,EAAoB;AAChBf;AACA;AACH;AACDa,oBAAQG,SAAR,CAAkBE,GAAlB,CAAsB,WAAtB;AACAL,oBAAQO,KAAR,CAAcC,iBAAd,GAAqCN,aAArC;;AAGA;AACA,gBAAMO,kBAAkBjB,MAAMkB,KAAN,CAAY,GAAZ,CAAxB;AA5BwB;AAAA;AAAA;;AAAA;AA6BxB,qCAAmBD,eAAnB,8HAAoC;AAAA,wBAAzBE,IAAyB;;AAChCX,4BAAQG,SAAR,CAAkBE,GAAlB,CAAsBM,IAAtB;AACH;AA/BuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiCxB,gBAAIC,UAAU,IAAd;AACA,gBAAMC,cAAc,SAAdA,WAAc,GAAM;AACtBC,6BAAaF,OAAb;;AAEAZ,wBAAQG,SAAR,CAAkBG,MAAlB,CAAyB,WAAzB;AACAN,wBAAQO,KAAR,CAAcC,iBAAd,GAAkC,EAAlC;;AAJsB;AAAA;AAAA;;AAAA;AAMtB,0CAAmBC,eAAnB,mIAAoC;AAAA,4BAAzBE,IAAyB;;AAChCX,gCAAQG,SAAR,CAAkBG,MAAlB,CAAyBK,IAAzB;AACH;AARqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUtBxB;AACH,aAXD;;AAaA;AACAyB,sBAAUG,WAAWF,WAAX,EAAwBX,aAAxB,CAAV;AACA,kBAAKc,kBAAL,CAAwBC,IAAxB,CAA6BL,OAA7B;AACH,SA/GkB;;AAAA,cAiHnBf,eAjHmB,GAiHD,UAACV,IAAD,EAAU;AACxB,gBAAMa,UAAU,mBAASC,WAAT,OAAhB;AADwB,+BAES,MAAKhB,KAFd;AAAA,gBAEhBW,KAFgB,gBAEhBA,KAFgB;AAAA,gBAETsB,aAFS,gBAETA,aAFS;;AAGxB,gBAAI,CAAClB,OAAL,EAAc;AACVb;AACA;AACH;;AAED;AACA,gBAAI,CAAC+B,aAAL,EAAoB;AAChB/B;AACA;AACH;;AAEDa,oBAAQG,SAAR,CAAkBE,GAAlB,CAAsB,WAAtB;AACAL,oBAAQO,KAAR,CAAcC,iBAAd,GAAqCU,aAArC;;AAEA;AACA,gBAAMC,kBAAkBvB,MAAMc,KAAN,CAAY,GAAZ,CAAxB;AAlBwB;AAAA;AAAA;;AAAA;AAmBxB,sCAAmBS,eAAnB,mIAAoC;AAAA,wBAAzBR,IAAyB;;AAChCX,4BAAQG,SAAR,CAAkBE,GAAlB,CAAsBM,IAAtB;AACH;AArBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBxB,gBAAIC,UAAU,IAAd;AACA,gBAAMC,cAAc,SAAdA,WAAc,GAAM;AACtBC,6BAAaF,OAAb;;AAEAZ,wBAAQG,SAAR,CAAkBG,MAAlB,CAAyB,WAAzB;AACAN,wBAAQO,KAAR,CAAcC,iBAAd,GAAkC,EAAlC;;AAJsB;AAAA;AAAA;;AAAA;AAMtB,0CAAmBW,eAAnB,mIAAoC;AAAA,4BAAzBR,IAAyB;;AAChCX,gCAAQG,SAAR,CAAkBG,MAAlB,CAAyBK,IAAzB;AACH;AARqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUtBxB;AACH,aAXD;;AAaA;AACAyB,sBAAUG,WAAWF,WAAX,EAAwBK,aAAxB,CAAV;AACA,kBAAKF,kBAAL,CAAwBC,IAAxB,CAA6BL,OAA7B;AACH,SAzJkB;;AAEf,cAAKI,kBAAL,GAA0B,EAA1B;AAFe;AAGlB;;;;+CAEsB;AACnB,gBAAI,KAAKJ,OAAT,EAAkB;AACdE,6BAAa,KAAKF,OAAlB;AACH;AACD,iBAAKI,kBAAL,CAAwBI,OAAxB,CAAgC,mBAAW;AACvCN,6BAAaF,OAAb;AACH,aAFD;AAGH;;;iCAEQ;AACL,mBAAO,gBAAMS,QAAN,CAAeC,IAAf,CAAoB,KAAKrC,KAAL,CAAWsC,QAA/B,CAAP;AACH;;;;EAzCsD,gBAAMC,S,UAkBtDC,Y,gBACA,yBAAeA,Y;AAClBlC,aAAS,mBAAM,CAAE,C;AACjBQ,aAAS,mBAAM,CAAE,C;AACjBX,gBAAY;;kBAtBCJ,6B","file":"animationChildren.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport AnimationProps from './animationProps'\n\n/**\n * Transition children class. Pretty much copy of ReactCSSTransitionGroupChild\n * Differences:\n * 1) There is no appear animation\n * 2) Supports multiple class names in 'enter' and 'leave', so can pass 'fade in' and 'fade out'\n * 3) Automatically adds 'transition visible' and 'transition hidden / 'animating' classes\n */\nexport default class SemanticCSSTransitionChildren extends React.Component {\n    static propTypes = {\n        ...AnimationProps.propTypes,\n        /**\n         * Enter callback\n         */\n        onEnter: PropTypes.func,\n        /**\n         * Leave callback\n         */\n        onLeave: PropTypes.func,\n        /**\n         * Run animation on component mounting (transition component)\n         * It's necessary for portal components\n         */\n        runOnMount: PropTypes.bool\n    };\n\n    static defaultProps = {\n        ...AnimationProps.defaultProps,\n        onEnter: () => {},\n        onLeave: () => {},\n        runOnMount: false\n    };\n\n    constructor(props) {\n        super(props);\n        this.transitionTimeouts = [];\n    }\n\n    componentWillUnmount() {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n        this.transitionTimeouts.forEach(timeout => {\n            clearTimeout(timeout);\n        });\n    }\n\n    render() {\n        return React.Children.only(this.props.children);\n    }\n\n    componentWillAppear = (done) => {\n        const { runOnMount } = this.props;\n        if (runOnMount) {\n            this.componentWillEnter(done);\n        } else {\n            done();\n        }\n    };\n\n    componentDidAppear = () => {\n        const { runOnMount, onEnter } = this.props;\n        if (runOnMount) {\n            onEnter();\n        }\n    };\n\n    componentWillEnter = (done) => {\n        const { enter } = this.props;\n        if (typeof enter === 'string') {\n            this.enterTransition(done);\n        } else {\n            done();\n        }\n    };\n\n    componentDidEnter = () => {\n        this.props.onEnter();\n    };\n\n\n    componentWillLeave = (done) => {\n        const { leave } = this.props;\n        if (typeof leave === 'string') {\n            this.leaveTransition(done);\n        } else {\n            done();\n        }\n    };\n\n    componentDidLeave = () => {\n        this.props.onLeave();\n    };\n\n    enterTransition = (done) => {\n        const element = ReactDOM.findDOMNode(this);\n        const { enter, enterDuration } = this.props;\n        if (!element) {\n            done();\n            return;\n        }\n\n        if (!element.classList.contains('transition')) {\n            element.classList.add('transition');\n        }\n        if (element.classList.contains('hidden')) {\n            element.classList.remove('hidden');\n        }\n        if (!element.classList.contains('visible')) {\n            element.classList.add('visible');\n        }\n\n        // bail if we don't have duration\n        if (!enterDuration) {\n            done();\n            return;\n        }\n        element.classList.add('animating');\n        element.style.animationDuration = `${enterDuration}ms`;\n\n\n        // Add transition classes\n        const enterClassNames = enter.split(' ');\n        for (const name of enterClassNames) {\n            element.classList.add(name);\n        }\n\n        let timeout = null;\n        const endListener = () => {\n            clearTimeout(timeout);\n\n            element.classList.remove('animating');\n            element.style.animationDuration = '';\n\n            for (const name of enterClassNames) {\n                element.classList.remove(name);\n            }\n\n            done();\n        };\n\n        // Clean-up the animation after the specified delay\n        timeout = setTimeout(endListener, enterDuration);\n        this.transitionTimeouts.push(timeout);\n    };\n\n    leaveTransition = (done) => {\n        const element = ReactDOM.findDOMNode(this);\n        const { leave, leaveDuration } = this.props;\n        if (!element) {\n            done();\n            return;\n        }\n\n        // bail if we don't have duration\n        if (!leaveDuration) {\n            done();\n            return;\n        }\n\n        element.classList.add('animating');\n        element.style.animationDuration = `${leaveDuration}ms`;\n\n        // Add transition classes\n        const leaveClassNames = leave.split(' ');\n        for (const name of leaveClassNames) {\n            element.classList.add(name);\n        }\n\n        let timeout = null;\n        const endListener = () => {\n            clearTimeout(timeout);\n\n            element.classList.remove('animating');\n            element.style.animationDuration = '';\n\n            for (const name of leaveClassNames) {\n                element.classList.remove(name);\n            }\n\n            done();\n        };\n\n        // Clean-up the animation after the specified delay\n        timeout = setTimeout(endListener, leaveDuration);\n        this.transitionTimeouts.push(timeout);\n    }\n}\n\n"]}